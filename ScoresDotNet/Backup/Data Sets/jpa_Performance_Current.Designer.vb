'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("jpa_Performance_Current"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class jpa_Performance_Current
    Inherits Global.System.Data.DataSet
    
    Private tablejpa_Performance_Current As jpa_Performance_CurrentDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("jpa_Performance_Current")) Is Nothing) Then
                MyBase.Tables.Add(New jpa_Performance_CurrentDataTable(ds.Tables("jpa_Performance_Current")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property jpa_Performance_Current() As jpa_Performance_CurrentDataTable
        Get
            Return Me.tablejpa_Performance_Current
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As jpa_Performance_Current = CType(MyBase.Clone,jpa_Performance_Current)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("jpa_Performance_Current")) Is Nothing) Then
                MyBase.Tables.Add(New jpa_Performance_CurrentDataTable(ds.Tables("jpa_Performance_Current")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablejpa_Performance_Current = CType(MyBase.Tables("jpa_Performance_Current"),jpa_Performance_CurrentDataTable)
        If (initTable = true) Then
            If (Not (Me.tablejpa_Performance_Current) Is Nothing) Then
                Me.tablejpa_Performance_Current.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "jpa_Performance_Current"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/jpa_Performance_Current.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablejpa_Performance_Current = New jpa_Performance_CurrentDataTable
        MyBase.Tables.Add(Me.tablejpa_Performance_Current)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializejpa_Performance_Current() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As jpa_Performance_Current = New jpa_Performance_Current
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub jpa_Performance_CurrentRowChangeEventHandler(ByVal sender As Object, ByVal e As jpa_Performance_CurrentRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class jpa_Performance_CurrentDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnRowid As Global.System.Data.DataColumn
        
        Private columnDivision As Global.System.Data.DataColumn
        
        Private columnPrincipal As Global.System.Data.DataColumn
        
        Private columnLine As Global.System.Data.DataColumn
        
        Private columnItemCode As Global.System.Data.DataColumn
        
        Private columnItemDesc As Global.System.Data.DataColumn
        
        Private columnMrCode As Global.System.Data.DataColumn
        
        Private columncmTargetAmt As Global.System.Data.DataColumn
        
        Private columnytdTargetAmt As Global.System.Data.DataColumn
        
        Private columncmMdiAmt As Global.System.Data.DataColumn
        
        Private columnytdMdiAmt As Global.System.Data.DataColumn
        
        Private columncmMercuryAmt As Global.System.Data.DataColumn
        
        Private columnytdMercuryAmt As Global.System.Data.DataColumn
        
        Private columncmlActualSales As Global.System.Data.DataColumn
        
        Private columnytdlActualSales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "jpa_Performance_Current"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RowidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRowid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DivisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrincipalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrincipal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ItemDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MrCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMrCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cmTargetAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmTargetAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ytdTargetAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnytdTargetAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cmMdiAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmMdiAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ytdMdiAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnytdMdiAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cmMercuryAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmMercuryAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ytdMercuryAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnytdMercuryAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cmlActualSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncmlActualSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ytdlActualSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnytdlActualSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As jpa_Performance_CurrentRow
            Get
                Return CType(Me.Rows(index),jpa_Performance_CurrentRow)
            End Get
        End Property
        
        Public Event jpa_Performance_CurrentRowChanging As jpa_Performance_CurrentRowChangeEventHandler
        
        Public Event jpa_Performance_CurrentRowChanged As jpa_Performance_CurrentRowChangeEventHandler
        
        Public Event jpa_Performance_CurrentRowDeleting As jpa_Performance_CurrentRowChangeEventHandler
        
        Public Event jpa_Performance_CurrentRowDeleted As jpa_Performance_CurrentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addjpa_Performance_CurrentRow(ByVal row As jpa_Performance_CurrentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addjpa_Performance_CurrentRow(ByVal Division As String, ByVal Principal As String, ByVal Line As String, ByVal ItemCode As String, ByVal ItemDesc As String, ByVal MrCode As String, ByVal cmTargetAmt As Decimal, ByVal ytdTargetAmt As Decimal, ByVal cmMdiAmt As Decimal, ByVal ytdMdiAmt As Decimal, ByVal cmMercuryAmt As Decimal, ByVal ytdMercuryAmt As Decimal, ByVal cmlActualSales As Decimal, ByVal ytdlActualSales As Decimal) As jpa_Performance_CurrentRow
            Dim rowjpa_Performance_CurrentRow As jpa_Performance_CurrentRow = CType(Me.NewRow,jpa_Performance_CurrentRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Division, Principal, Line, ItemCode, ItemDesc, MrCode, cmTargetAmt, ytdTargetAmt, cmMdiAmt, ytdMdiAmt, cmMercuryAmt, ytdMercuryAmt, cmlActualSales, ytdlActualSales}
            rowjpa_Performance_CurrentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowjpa_Performance_CurrentRow)
            Return rowjpa_Performance_CurrentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByRowid(ByVal Rowid As Decimal) As jpa_Performance_CurrentRow
            Return CType(Me.Rows.Find(New Object() {Rowid}),jpa_Performance_CurrentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As jpa_Performance_CurrentDataTable = CType(MyBase.Clone,jpa_Performance_CurrentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New jpa_Performance_CurrentDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnRowid = MyBase.Columns("Rowid")
            Me.columnDivision = MyBase.Columns("Division")
            Me.columnPrincipal = MyBase.Columns("Principal")
            Me.columnLine = MyBase.Columns("Line")
            Me.columnItemCode = MyBase.Columns("ItemCode")
            Me.columnItemDesc = MyBase.Columns("ItemDesc")
            Me.columnMrCode = MyBase.Columns("MrCode")
            Me.columncmTargetAmt = MyBase.Columns("cmTargetAmt")
            Me.columnytdTargetAmt = MyBase.Columns("ytdTargetAmt")
            Me.columncmMdiAmt = MyBase.Columns("cmMdiAmt")
            Me.columnytdMdiAmt = MyBase.Columns("ytdMdiAmt")
            Me.columncmMercuryAmt = MyBase.Columns("cmMercuryAmt")
            Me.columnytdMercuryAmt = MyBase.Columns("ytdMercuryAmt")
            Me.columncmlActualSales = MyBase.Columns("cmlActualSales")
            Me.columnytdlActualSales = MyBase.Columns("ytdlActualSales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnRowid = New Global.System.Data.DataColumn("Rowid", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRowid)
            Me.columnDivision = New Global.System.Data.DataColumn("Division", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivision)
            Me.columnPrincipal = New Global.System.Data.DataColumn("Principal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrincipal)
            Me.columnLine = New Global.System.Data.DataColumn("Line", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLine)
            Me.columnItemCode = New Global.System.Data.DataColumn("ItemCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemCode)
            Me.columnItemDesc = New Global.System.Data.DataColumn("ItemDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemDesc)
            Me.columnMrCode = New Global.System.Data.DataColumn("MrCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMrCode)
            Me.columncmTargetAmt = New Global.System.Data.DataColumn("cmTargetAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmTargetAmt)
            Me.columnytdTargetAmt = New Global.System.Data.DataColumn("ytdTargetAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnytdTargetAmt)
            Me.columncmMdiAmt = New Global.System.Data.DataColumn("cmMdiAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmMdiAmt)
            Me.columnytdMdiAmt = New Global.System.Data.DataColumn("ytdMdiAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnytdMdiAmt)
            Me.columncmMercuryAmt = New Global.System.Data.DataColumn("cmMercuryAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmMercuryAmt)
            Me.columnytdMercuryAmt = New Global.System.Data.DataColumn("ytdMercuryAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnytdMercuryAmt)
            Me.columncmlActualSales = New Global.System.Data.DataColumn("cmlActualSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncmlActualSales)
            Me.columnytdlActualSales = New Global.System.Data.DataColumn("ytdlActualSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnytdlActualSales)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("jpa_Performance_CurrentKey1", New Global.System.Data.DataColumn() {Me.columnRowid}, true))
            Me.columnRowid.AutoIncrement = true
            Me.columnRowid.AllowDBNull = false
            Me.columnRowid.ReadOnly = true
            Me.columnRowid.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newjpa_Performance_CurrentRow() As jpa_Performance_CurrentRow
            Return CType(Me.NewRow,jpa_Performance_CurrentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New jpa_Performance_CurrentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(jpa_Performance_CurrentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.jpa_Performance_CurrentRowChangedEvent) Is Nothing) Then
                RaiseEvent jpa_Performance_CurrentRowChanged(Me, New jpa_Performance_CurrentRowChangeEvent(CType(e.Row,jpa_Performance_CurrentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.jpa_Performance_CurrentRowChangingEvent) Is Nothing) Then
                RaiseEvent jpa_Performance_CurrentRowChanging(Me, New jpa_Performance_CurrentRowChangeEvent(CType(e.Row,jpa_Performance_CurrentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.jpa_Performance_CurrentRowDeletedEvent) Is Nothing) Then
                RaiseEvent jpa_Performance_CurrentRowDeleted(Me, New jpa_Performance_CurrentRowChangeEvent(CType(e.Row,jpa_Performance_CurrentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.jpa_Performance_CurrentRowDeletingEvent) Is Nothing) Then
                RaiseEvent jpa_Performance_CurrentRowDeleting(Me, New jpa_Performance_CurrentRowChangeEvent(CType(e.Row,jpa_Performance_CurrentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removejpa_Performance_CurrentRow(ByVal row As jpa_Performance_CurrentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As jpa_Performance_Current = New jpa_Performance_Current
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "jpa_Performance_CurrentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class jpa_Performance_CurrentRow
        Inherits Global.System.Data.DataRow
        
        Private tablejpa_Performance_Current As jpa_Performance_CurrentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablejpa_Performance_Current = CType(Me.Table,jpa_Performance_CurrentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Rowid() As Decimal
            Get
                Return CType(Me(Me.tablejpa_Performance_Current.RowidColumn),Decimal)
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.RowidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Division() As String
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.DivisionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Division' in table 'jpa_Performance_Current' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.DivisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Principal() As String
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.PrincipalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Principal' in table 'jpa_Performance_Current' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.PrincipalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Line() As String
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.LineColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Line' in table 'jpa_Performance_Current' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.LineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.ItemCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemCode' in table 'jpa_Performance_Current' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.ItemCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ItemDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.ItemDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemDesc' in table 'jpa_Performance_Current' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.ItemDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MrCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.MrCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MrCode' in table 'jpa_Performance_Current' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.MrCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cmTargetAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.cmTargetAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cmTargetAmt' in table 'jpa_Performance_Current' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.cmTargetAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ytdTargetAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.ytdTargetAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ytdTargetAmt' in table 'jpa_Performance_Current' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.ytdTargetAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cmMdiAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.cmMdiAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cmMdiAmt' in table 'jpa_Performance_Current' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.cmMdiAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ytdMdiAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.ytdMdiAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ytdMdiAmt' in table 'jpa_Performance_Current' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.ytdMdiAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cmMercuryAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.cmMercuryAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cmMercuryAmt' in table 'jpa_Performance_Current' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.cmMercuryAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ytdMercuryAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.ytdMercuryAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ytdMercuryAmt' in table 'jpa_Performance_Current' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.ytdMercuryAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cmlActualSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.cmlActualSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cmlActualSales' in table 'jpa_Performance_Current' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.cmlActualSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ytdlActualSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablejpa_Performance_Current.ytdlActualSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ytdlActualSales' in table 'jpa_Performance_Current' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablejpa_Performance_Current.ytdlActualSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDivisionNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.DivisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDivisionNull()
            Me(Me.tablejpa_Performance_Current.DivisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrincipalNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.PrincipalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrincipalNull()
            Me(Me.tablejpa_Performance_Current.PrincipalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLineNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.LineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLineNull()
            Me(Me.tablejpa_Performance_Current.LineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemCodeNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.ItemCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemCodeNull()
            Me(Me.tablejpa_Performance_Current.ItemCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsItemDescNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.ItemDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetItemDescNull()
            Me(Me.tablejpa_Performance_Current.ItemDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMrCodeNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.MrCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMrCodeNull()
            Me(Me.tablejpa_Performance_Current.MrCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscmTargetAmtNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.cmTargetAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcmTargetAmtNull()
            Me(Me.tablejpa_Performance_Current.cmTargetAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsytdTargetAmtNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.ytdTargetAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetytdTargetAmtNull()
            Me(Me.tablejpa_Performance_Current.ytdTargetAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscmMdiAmtNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.cmMdiAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcmMdiAmtNull()
            Me(Me.tablejpa_Performance_Current.cmMdiAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsytdMdiAmtNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.ytdMdiAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetytdMdiAmtNull()
            Me(Me.tablejpa_Performance_Current.ytdMdiAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscmMercuryAmtNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.cmMercuryAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcmMercuryAmtNull()
            Me(Me.tablejpa_Performance_Current.cmMercuryAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsytdMercuryAmtNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.ytdMercuryAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetytdMercuryAmtNull()
            Me(Me.tablejpa_Performance_Current.ytdMercuryAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscmlActualSalesNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.cmlActualSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcmlActualSalesNull()
            Me(Me.tablejpa_Performance_Current.cmlActualSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsytdlActualSalesNull() As Boolean
            Return Me.IsNull(Me.tablejpa_Performance_Current.ytdlActualSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetytdlActualSalesNull()
            Me(Me.tablejpa_Performance_Current.ytdlActualSalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class jpa_Performance_CurrentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As jpa_Performance_CurrentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As jpa_Performance_CurrentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As jpa_Performance_CurrentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
