'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18408
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ComincRecover2009"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ComincRecover2009
    Inherits Global.System.Data.DataSet
    
    Private tableMedrepCommission_Details2009 As MedrepCommission_Details2009DataTable
    
    Private tableChiralPMR_2009SaleTarget As ChiralPMR_2009SaleTargetDataTable
    
    Private tableMHpmr_2010SaleTarget As MHpmr_2010SaleTargetDataTable
    
    Private tableComIncRecover As ComIncRecoverDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("MedrepCommission_Details2009")) Is Nothing) Then
                MyBase.Tables.Add(New MedrepCommission_Details2009DataTable(ds.Tables("MedrepCommission_Details2009")))
            End If
            If (Not (ds.Tables("ChiralPMR_2009SaleTarget")) Is Nothing) Then
                MyBase.Tables.Add(New ChiralPMR_2009SaleTargetDataTable(ds.Tables("ChiralPMR_2009SaleTarget")))
            End If
            If (Not (ds.Tables("MHpmr_2010SaleTarget")) Is Nothing) Then
                MyBase.Tables.Add(New MHpmr_2010SaleTargetDataTable(ds.Tables("MHpmr_2010SaleTarget")))
            End If
            If (Not (ds.Tables("ComIncRecover")) Is Nothing) Then
                MyBase.Tables.Add(New ComIncRecoverDataTable(ds.Tables("ComIncRecover")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MedrepCommission_Details2009() As MedrepCommission_Details2009DataTable
        Get
            Return Me.tableMedrepCommission_Details2009
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ChiralPMR_2009SaleTarget() As ChiralPMR_2009SaleTargetDataTable
        Get
            Return Me.tableChiralPMR_2009SaleTarget
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MHpmr_2010SaleTarget() As MHpmr_2010SaleTargetDataTable
        Get
            Return Me.tableMHpmr_2010SaleTarget
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ComIncRecover() As ComIncRecoverDataTable
        Get
            Return Me.tableComIncRecover
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ComincRecover2009 = CType(MyBase.Clone,ComincRecover2009)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("MedrepCommission_Details2009")) Is Nothing) Then
                MyBase.Tables.Add(New MedrepCommission_Details2009DataTable(ds.Tables("MedrepCommission_Details2009")))
            End If
            If (Not (ds.Tables("ChiralPMR_2009SaleTarget")) Is Nothing) Then
                MyBase.Tables.Add(New ChiralPMR_2009SaleTargetDataTable(ds.Tables("ChiralPMR_2009SaleTarget")))
            End If
            If (Not (ds.Tables("MHpmr_2010SaleTarget")) Is Nothing) Then
                MyBase.Tables.Add(New MHpmr_2010SaleTargetDataTable(ds.Tables("MHpmr_2010SaleTarget")))
            End If
            If (Not (ds.Tables("ComIncRecover")) Is Nothing) Then
                MyBase.Tables.Add(New ComIncRecoverDataTable(ds.Tables("ComIncRecover")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableMedrepCommission_Details2009 = CType(MyBase.Tables("MedrepCommission_Details2009"),MedrepCommission_Details2009DataTable)
        If (initTable = true) Then
            If (Not (Me.tableMedrepCommission_Details2009) Is Nothing) Then
                Me.tableMedrepCommission_Details2009.InitVars
            End If
        End If
        Me.tableChiralPMR_2009SaleTarget = CType(MyBase.Tables("ChiralPMR_2009SaleTarget"),ChiralPMR_2009SaleTargetDataTable)
        If (initTable = true) Then
            If (Not (Me.tableChiralPMR_2009SaleTarget) Is Nothing) Then
                Me.tableChiralPMR_2009SaleTarget.InitVars
            End If
        End If
        Me.tableMHpmr_2010SaleTarget = CType(MyBase.Tables("MHpmr_2010SaleTarget"),MHpmr_2010SaleTargetDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMHpmr_2010SaleTarget) Is Nothing) Then
                Me.tableMHpmr_2010SaleTarget.InitVars
            End If
        End If
        Me.tableComIncRecover = CType(MyBase.Tables("ComIncRecover"),ComIncRecoverDataTable)
        If (initTable = true) Then
            If (Not (Me.tableComIncRecover) Is Nothing) Then
                Me.tableComIncRecover.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ComincRecover2009"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ComincRecover2009.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableMedrepCommission_Details2009 = New MedrepCommission_Details2009DataTable()
        MyBase.Tables.Add(Me.tableMedrepCommission_Details2009)
        Me.tableChiralPMR_2009SaleTarget = New ChiralPMR_2009SaleTargetDataTable()
        MyBase.Tables.Add(Me.tableChiralPMR_2009SaleTarget)
        Me.tableMHpmr_2010SaleTarget = New MHpmr_2010SaleTargetDataTable()
        MyBase.Tables.Add(Me.tableMHpmr_2010SaleTarget)
        Me.tableComIncRecover = New ComIncRecoverDataTable()
        MyBase.Tables.Add(Me.tableComIncRecover)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMedrepCommission_Details2009() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeChiralPMR_2009SaleTarget() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMHpmr_2010SaleTarget() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeComIncRecover() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ComincRecover2009 = New ComincRecover2009()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MedrepCommission_Details2009RowChangeEventHandler(ByVal sender As Object, ByVal e As MedrepCommission_Details2009RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ChiralPMR_2009SaleTargetRowChangeEventHandler(ByVal sender As Object, ByVal e As ChiralPMR_2009SaleTargetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MHpmr_2010SaleTargetRowChangeEventHandler(ByVal sender As Object, ByVal e As MHpmr_2010SaleTargetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ComIncRecoverRowChangeEventHandler(ByVal sender As Object, ByVal e As ComIncRecoverRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MedrepCommission_Details2009DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCommissionDate As Global.System.Data.DataColumn
        
        Private columnMrCode As Global.System.Data.DataColumn
        
        Private columnSales As Global.System.Data.DataColumn
        
        Private columnTarget As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MedrepCommission_Details2009"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CommissionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCommissionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MrCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMrCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MedrepCommission_Details2009Row
            Get
                Return CType(Me.Rows(index),MedrepCommission_Details2009Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MedrepCommission_Details2009RowChanging As MedrepCommission_Details2009RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MedrepCommission_Details2009RowChanged As MedrepCommission_Details2009RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MedrepCommission_Details2009RowDeleting As MedrepCommission_Details2009RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MedrepCommission_Details2009RowDeleted As MedrepCommission_Details2009RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMedrepCommission_Details2009Row(ByVal row As MedrepCommission_Details2009Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMedrepCommission_Details2009Row(ByVal CommissionDate As Date, ByVal MrCode As String, ByVal Sales As Decimal, ByVal Target As Decimal) As MedrepCommission_Details2009Row
            Dim rowMedrepCommission_Details2009Row As MedrepCommission_Details2009Row = CType(Me.NewRow,MedrepCommission_Details2009Row)
            Dim columnValuesArray() As Object = New Object() {CommissionDate, MrCode, Sales, Target}
            rowMedrepCommission_Details2009Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowMedrepCommission_Details2009Row)
            Return rowMedrepCommission_Details2009Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MedrepCommission_Details2009DataTable = CType(MyBase.Clone,MedrepCommission_Details2009DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MedrepCommission_Details2009DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCommissionDate = MyBase.Columns("CommissionDate")
            Me.columnMrCode = MyBase.Columns("MrCode")
            Me.columnSales = MyBase.Columns("Sales")
            Me.columnTarget = MyBase.Columns("Target")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCommissionDate = New Global.System.Data.DataColumn("CommissionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCommissionDate)
            Me.columnMrCode = New Global.System.Data.DataColumn("MrCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMrCode)
            Me.columnSales = New Global.System.Data.DataColumn("Sales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSales)
            Me.columnTarget = New Global.System.Data.DataColumn("Target", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarget)
            Me.columnSales.ReadOnly = true
            Me.columnTarget.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMedrepCommission_Details2009Row() As MedrepCommission_Details2009Row
            Return CType(Me.NewRow,MedrepCommission_Details2009Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MedrepCommission_Details2009Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MedrepCommission_Details2009Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MedrepCommission_Details2009RowChangedEvent) Is Nothing) Then
                RaiseEvent MedrepCommission_Details2009RowChanged(Me, New MedrepCommission_Details2009RowChangeEvent(CType(e.Row,MedrepCommission_Details2009Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MedrepCommission_Details2009RowChangingEvent) Is Nothing) Then
                RaiseEvent MedrepCommission_Details2009RowChanging(Me, New MedrepCommission_Details2009RowChangeEvent(CType(e.Row,MedrepCommission_Details2009Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MedrepCommission_Details2009RowDeletedEvent) Is Nothing) Then
                RaiseEvent MedrepCommission_Details2009RowDeleted(Me, New MedrepCommission_Details2009RowChangeEvent(CType(e.Row,MedrepCommission_Details2009Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MedrepCommission_Details2009RowDeletingEvent) Is Nothing) Then
                RaiseEvent MedrepCommission_Details2009RowDeleting(Me, New MedrepCommission_Details2009RowChangeEvent(CType(e.Row,MedrepCommission_Details2009Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMedrepCommission_Details2009Row(ByVal row As MedrepCommission_Details2009Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ComincRecover2009 = New ComincRecover2009()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MedrepCommission_Details2009DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ChiralPMR_2009SaleTargetDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnRowid As Global.System.Data.DataColumn
        
        Private columnCommissionDate As Global.System.Data.DataColumn
        
        Private columnSupCode As Global.System.Data.DataColumn
        
        Private columnMrCode As Global.System.Data.DataColumn
        
        Private columnJanJulS As Global.System.Data.DataColumn
        
        Private columnFebAugS As Global.System.Data.DataColumn
        
        Private columnMarSepS As Global.System.Data.DataColumn
        
        Private columnAprOctS As Global.System.Data.DataColumn
        
        Private columnMayNovS As Global.System.Data.DataColumn
        
        Private columnJunDecS As Global.System.Data.DataColumn
        
        Private columnJanJulT As Global.System.Data.DataColumn
        
        Private columnFebAugT As Global.System.Data.DataColumn
        
        Private columnMarSepT As Global.System.Data.DataColumn
        
        Private columnAprOctT As Global.System.Data.DataColumn
        
        Private columnMayNovT As Global.System.Data.DataColumn
        
        Private columnJunDecT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ChiralPMR_2009SaleTarget"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RowidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRowid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CommissionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCommissionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SupCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MrCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMrCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JanJulSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJanJulS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FebAugSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFebAugS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MarSepSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMarSepS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AprOctSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAprOctS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MayNovSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMayNovS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JunDecSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJunDecS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JanJulTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJanJulT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FebAugTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFebAugT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MarSepTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMarSepT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AprOctTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAprOctT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MayNovTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMayNovT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JunDecTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJunDecT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ChiralPMR_2009SaleTargetRow
            Get
                Return CType(Me.Rows(index),ChiralPMR_2009SaleTargetRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ChiralPMR_2009SaleTargetRowChanging As ChiralPMR_2009SaleTargetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ChiralPMR_2009SaleTargetRowChanged As ChiralPMR_2009SaleTargetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ChiralPMR_2009SaleTargetRowDeleting As ChiralPMR_2009SaleTargetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ChiralPMR_2009SaleTargetRowDeleted As ChiralPMR_2009SaleTargetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddChiralPMR_2009SaleTargetRow(ByVal row As ChiralPMR_2009SaleTargetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddChiralPMR_2009SaleTargetRow( _
                    ByVal Rowid As Integer,  _
                    ByVal CommissionDate As Date,  _
                    ByVal SupCode As String,  _
                    ByVal MrCode As String,  _
                    ByVal JanJulS As Decimal,  _
                    ByVal FebAugS As Decimal,  _
                    ByVal MarSepS As Decimal,  _
                    ByVal AprOctS As Decimal,  _
                    ByVal MayNovS As Decimal,  _
                    ByVal JunDecS As Decimal,  _
                    ByVal JanJulT As Decimal,  _
                    ByVal FebAugT As Decimal,  _
                    ByVal MarSepT As Decimal,  _
                    ByVal AprOctT As Decimal,  _
                    ByVal MayNovT As Decimal,  _
                    ByVal JunDecT As Decimal) As ChiralPMR_2009SaleTargetRow
            Dim rowChiralPMR_2009SaleTargetRow As ChiralPMR_2009SaleTargetRow = CType(Me.NewRow,ChiralPMR_2009SaleTargetRow)
            Dim columnValuesArray() As Object = New Object() {Rowid, CommissionDate, SupCode, MrCode, JanJulS, FebAugS, MarSepS, AprOctS, MayNovS, JunDecS, JanJulT, FebAugT, MarSepT, AprOctT, MayNovT, JunDecT}
            rowChiralPMR_2009SaleTargetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowChiralPMR_2009SaleTargetRow)
            Return rowChiralPMR_2009SaleTargetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ChiralPMR_2009SaleTargetDataTable = CType(MyBase.Clone,ChiralPMR_2009SaleTargetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ChiralPMR_2009SaleTargetDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRowid = MyBase.Columns("Rowid")
            Me.columnCommissionDate = MyBase.Columns("CommissionDate")
            Me.columnSupCode = MyBase.Columns("SupCode")
            Me.columnMrCode = MyBase.Columns("MrCode")
            Me.columnJanJulS = MyBase.Columns("JanJulS")
            Me.columnFebAugS = MyBase.Columns("FebAugS")
            Me.columnMarSepS = MyBase.Columns("MarSepS")
            Me.columnAprOctS = MyBase.Columns("AprOctS")
            Me.columnMayNovS = MyBase.Columns("MayNovS")
            Me.columnJunDecS = MyBase.Columns("JunDecS")
            Me.columnJanJulT = MyBase.Columns("JanJulT")
            Me.columnFebAugT = MyBase.Columns("FebAugT")
            Me.columnMarSepT = MyBase.Columns("MarSepT")
            Me.columnAprOctT = MyBase.Columns("AprOctT")
            Me.columnMayNovT = MyBase.Columns("MayNovT")
            Me.columnJunDecT = MyBase.Columns("JunDecT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRowid = New Global.System.Data.DataColumn("Rowid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRowid)
            Me.columnCommissionDate = New Global.System.Data.DataColumn("CommissionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCommissionDate)
            Me.columnSupCode = New Global.System.Data.DataColumn("SupCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupCode)
            Me.columnMrCode = New Global.System.Data.DataColumn("MrCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMrCode)
            Me.columnJanJulS = New Global.System.Data.DataColumn("JanJulS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJanJulS)
            Me.columnFebAugS = New Global.System.Data.DataColumn("FebAugS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFebAugS)
            Me.columnMarSepS = New Global.System.Data.DataColumn("MarSepS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMarSepS)
            Me.columnAprOctS = New Global.System.Data.DataColumn("AprOctS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAprOctS)
            Me.columnMayNovS = New Global.System.Data.DataColumn("MayNovS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMayNovS)
            Me.columnJunDecS = New Global.System.Data.DataColumn("JunDecS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJunDecS)
            Me.columnJanJulT = New Global.System.Data.DataColumn("JanJulT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJanJulT)
            Me.columnFebAugT = New Global.System.Data.DataColumn("FebAugT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFebAugT)
            Me.columnMarSepT = New Global.System.Data.DataColumn("MarSepT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMarSepT)
            Me.columnAprOctT = New Global.System.Data.DataColumn("AprOctT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAprOctT)
            Me.columnMayNovT = New Global.System.Data.DataColumn("MayNovT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMayNovT)
            Me.columnJunDecT = New Global.System.Data.DataColumn("JunDecT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJunDecT)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewChiralPMR_2009SaleTargetRow() As ChiralPMR_2009SaleTargetRow
            Return CType(Me.NewRow,ChiralPMR_2009SaleTargetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ChiralPMR_2009SaleTargetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ChiralPMR_2009SaleTargetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ChiralPMR_2009SaleTargetRowChangedEvent) Is Nothing) Then
                RaiseEvent ChiralPMR_2009SaleTargetRowChanged(Me, New ChiralPMR_2009SaleTargetRowChangeEvent(CType(e.Row,ChiralPMR_2009SaleTargetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ChiralPMR_2009SaleTargetRowChangingEvent) Is Nothing) Then
                RaiseEvent ChiralPMR_2009SaleTargetRowChanging(Me, New ChiralPMR_2009SaleTargetRowChangeEvent(CType(e.Row,ChiralPMR_2009SaleTargetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ChiralPMR_2009SaleTargetRowDeletedEvent) Is Nothing) Then
                RaiseEvent ChiralPMR_2009SaleTargetRowDeleted(Me, New ChiralPMR_2009SaleTargetRowChangeEvent(CType(e.Row,ChiralPMR_2009SaleTargetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ChiralPMR_2009SaleTargetRowDeletingEvent) Is Nothing) Then
                RaiseEvent ChiralPMR_2009SaleTargetRowDeleting(Me, New ChiralPMR_2009SaleTargetRowChangeEvent(CType(e.Row,ChiralPMR_2009SaleTargetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveChiralPMR_2009SaleTargetRow(ByVal row As ChiralPMR_2009SaleTargetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ComincRecover2009 = New ComincRecover2009()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ChiralPMR_2009SaleTargetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MHpmr_2010SaleTargetDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnRowid As Global.System.Data.DataColumn
        
        Private columnCommissionDate As Global.System.Data.DataColumn
        
        Private columnSupCode As Global.System.Data.DataColumn
        
        Private columnMrCode As Global.System.Data.DataColumn
        
        Private columnJanJulS As Global.System.Data.DataColumn
        
        Private columnFebAugS As Global.System.Data.DataColumn
        
        Private columnMarSepS As Global.System.Data.DataColumn
        
        Private columnAprOctS As Global.System.Data.DataColumn
        
        Private columnMayNovS As Global.System.Data.DataColumn
        
        Private columnJunDecS As Global.System.Data.DataColumn
        
        Private columnJanJulT As Global.System.Data.DataColumn
        
        Private columnFebAugT As Global.System.Data.DataColumn
        
        Private columnMarSepT As Global.System.Data.DataColumn
        
        Private columnAprOctT As Global.System.Data.DataColumn
        
        Private columnMayNovT As Global.System.Data.DataColumn
        
        Private columnJunDecT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MHpmr_2010SaleTarget"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RowidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRowid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CommissionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCommissionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SupCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MrCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMrCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JanJulSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJanJulS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FebAugSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFebAugS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MarSepSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMarSepS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AprOctSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAprOctS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MayNovSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMayNovS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JunDecSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJunDecS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JanJulTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJanJulT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FebAugTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFebAugT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MarSepTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMarSepT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AprOctTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAprOctT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MayNovTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMayNovT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JunDecTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJunDecT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MHpmr_2010SaleTargetRow
            Get
                Return CType(Me.Rows(index),MHpmr_2010SaleTargetRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MHpmr_2010SaleTargetRowChanging As MHpmr_2010SaleTargetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MHpmr_2010SaleTargetRowChanged As MHpmr_2010SaleTargetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MHpmr_2010SaleTargetRowDeleting As MHpmr_2010SaleTargetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MHpmr_2010SaleTargetRowDeleted As MHpmr_2010SaleTargetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMHpmr_2010SaleTargetRow(ByVal row As MHpmr_2010SaleTargetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMHpmr_2010SaleTargetRow( _
                    ByVal Rowid As Integer,  _
                    ByVal CommissionDate As Date,  _
                    ByVal SupCode As String,  _
                    ByVal MrCode As String,  _
                    ByVal JanJulS As Decimal,  _
                    ByVal FebAugS As Decimal,  _
                    ByVal MarSepS As Decimal,  _
                    ByVal AprOctS As Decimal,  _
                    ByVal MayNovS As Decimal,  _
                    ByVal JunDecS As Decimal,  _
                    ByVal JanJulT As Decimal,  _
                    ByVal FebAugT As Decimal,  _
                    ByVal MarSepT As Decimal,  _
                    ByVal AprOctT As Decimal,  _
                    ByVal MayNovT As Decimal,  _
                    ByVal JunDecT As Decimal) As MHpmr_2010SaleTargetRow
            Dim rowMHpmr_2010SaleTargetRow As MHpmr_2010SaleTargetRow = CType(Me.NewRow,MHpmr_2010SaleTargetRow)
            Dim columnValuesArray() As Object = New Object() {Rowid, CommissionDate, SupCode, MrCode, JanJulS, FebAugS, MarSepS, AprOctS, MayNovS, JunDecS, JanJulT, FebAugT, MarSepT, AprOctT, MayNovT, JunDecT}
            rowMHpmr_2010SaleTargetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMHpmr_2010SaleTargetRow)
            Return rowMHpmr_2010SaleTargetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MHpmr_2010SaleTargetDataTable = CType(MyBase.Clone,MHpmr_2010SaleTargetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MHpmr_2010SaleTargetDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRowid = MyBase.Columns("Rowid")
            Me.columnCommissionDate = MyBase.Columns("CommissionDate")
            Me.columnSupCode = MyBase.Columns("SupCode")
            Me.columnMrCode = MyBase.Columns("MrCode")
            Me.columnJanJulS = MyBase.Columns("JanJulS")
            Me.columnFebAugS = MyBase.Columns("FebAugS")
            Me.columnMarSepS = MyBase.Columns("MarSepS")
            Me.columnAprOctS = MyBase.Columns("AprOctS")
            Me.columnMayNovS = MyBase.Columns("MayNovS")
            Me.columnJunDecS = MyBase.Columns("JunDecS")
            Me.columnJanJulT = MyBase.Columns("JanJulT")
            Me.columnFebAugT = MyBase.Columns("FebAugT")
            Me.columnMarSepT = MyBase.Columns("MarSepT")
            Me.columnAprOctT = MyBase.Columns("AprOctT")
            Me.columnMayNovT = MyBase.Columns("MayNovT")
            Me.columnJunDecT = MyBase.Columns("JunDecT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRowid = New Global.System.Data.DataColumn("Rowid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRowid)
            Me.columnCommissionDate = New Global.System.Data.DataColumn("CommissionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCommissionDate)
            Me.columnSupCode = New Global.System.Data.DataColumn("SupCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupCode)
            Me.columnMrCode = New Global.System.Data.DataColumn("MrCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMrCode)
            Me.columnJanJulS = New Global.System.Data.DataColumn("JanJulS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJanJulS)
            Me.columnFebAugS = New Global.System.Data.DataColumn("FebAugS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFebAugS)
            Me.columnMarSepS = New Global.System.Data.DataColumn("MarSepS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMarSepS)
            Me.columnAprOctS = New Global.System.Data.DataColumn("AprOctS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAprOctS)
            Me.columnMayNovS = New Global.System.Data.DataColumn("MayNovS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMayNovS)
            Me.columnJunDecS = New Global.System.Data.DataColumn("JunDecS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJunDecS)
            Me.columnJanJulT = New Global.System.Data.DataColumn("JanJulT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJanJulT)
            Me.columnFebAugT = New Global.System.Data.DataColumn("FebAugT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFebAugT)
            Me.columnMarSepT = New Global.System.Data.DataColumn("MarSepT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMarSepT)
            Me.columnAprOctT = New Global.System.Data.DataColumn("AprOctT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAprOctT)
            Me.columnMayNovT = New Global.System.Data.DataColumn("MayNovT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMayNovT)
            Me.columnJunDecT = New Global.System.Data.DataColumn("JunDecT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJunDecT)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMHpmr_2010SaleTargetRow() As MHpmr_2010SaleTargetRow
            Return CType(Me.NewRow,MHpmr_2010SaleTargetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MHpmr_2010SaleTargetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MHpmr_2010SaleTargetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MHpmr_2010SaleTargetRowChangedEvent) Is Nothing) Then
                RaiseEvent MHpmr_2010SaleTargetRowChanged(Me, New MHpmr_2010SaleTargetRowChangeEvent(CType(e.Row,MHpmr_2010SaleTargetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MHpmr_2010SaleTargetRowChangingEvent) Is Nothing) Then
                RaiseEvent MHpmr_2010SaleTargetRowChanging(Me, New MHpmr_2010SaleTargetRowChangeEvent(CType(e.Row,MHpmr_2010SaleTargetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MHpmr_2010SaleTargetRowDeletedEvent) Is Nothing) Then
                RaiseEvent MHpmr_2010SaleTargetRowDeleted(Me, New MHpmr_2010SaleTargetRowChangeEvent(CType(e.Row,MHpmr_2010SaleTargetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MHpmr_2010SaleTargetRowDeletingEvent) Is Nothing) Then
                RaiseEvent MHpmr_2010SaleTargetRowDeleting(Me, New MHpmr_2010SaleTargetRowChangeEvent(CType(e.Row,MHpmr_2010SaleTargetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMHpmr_2010SaleTargetRow(ByVal row As MHpmr_2010SaleTargetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ComincRecover2009 = New ComincRecover2009()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MHpmr_2010SaleTargetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ComIncRecoverDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnRowid As Global.System.Data.DataColumn
        
        Private columnOriginalSales As Global.System.Data.DataColumn
        
        Private columnOriginalTarget As Global.System.Data.DataColumn
        
        Private columnAdjustedSales As Global.System.Data.DataColumn
        
        Private columnAdjustedTarget As Global.System.Data.DataColumn
        
        Private columnDivision As Global.System.Data.DataColumn
        
        Private columnDivisionPerformance As Global.System.Data.DataColumn
        
        Private columnDistrictPerformance As Global.System.Data.DataColumn
        
        Private columnBasic As Global.System.Data.DataColumn
        
        Private columnKeyProduct As Global.System.Data.DataColumn
        
        Private columnKeyProductSales As Global.System.Data.DataColumn
        
        Private columnKeyProductTarget As Global.System.Data.DataColumn
        
        Private columnSubKeyProductSales As Global.System.Data.DataColumn
        
        Private columnSubKeyProductTarget As Global.System.Data.DataColumn
        
        Private columnTertiaryKeyProductSales As Global.System.Data.DataColumn
        
        Private columnTertiaryKeyProductTarget As Global.System.Data.DataColumn
        
        Private columnExcessSales As Global.System.Data.DataColumn
        
        Private columnRepCount As Global.System.Data.DataColumn
        
        Private columnQuadStorm As Global.System.Data.DataColumn
        
        Private columnCallRate As Global.System.Data.DataColumn
        
        Private columnTarget As Global.System.Data.DataColumn
        
        Private columnAdjustedCallRate As Global.System.Data.DataColumn
        
        Private columnAdjustedCallTarget As Global.System.Data.DataColumn
        
        Private columnSupCode As Global.System.Data.DataColumn
        
        Private columnSupName As Global.System.Data.DataColumn
        
        Private columnMrCode As Global.System.Data.DataColumn
        
        Private columnMrName As Global.System.Data.DataColumn
        
        Private columnCommissionDate As Global.System.Data.DataColumn
        
        Private columnOriginalSalesR As Global.System.Data.DataColumn
        
        Private columnOriginalTargetR As Global.System.Data.DataColumn
        
        Private columnAdjustedSalesR As Global.System.Data.DataColumn
        
        Private columnAdjustedTargetR As Global.System.Data.DataColumn
        
        Private columnDivisionR As Global.System.Data.DataColumn
        
        Private columnDivisionPerformanceR As Global.System.Data.DataColumn
        
        Private columnDistrictPerformanceR As Global.System.Data.DataColumn
        
        Private columnBasicR As Global.System.Data.DataColumn
        
        Private columnKeyProductR As Global.System.Data.DataColumn
        
        Private columnKeyProductSalesR As Global.System.Data.DataColumn
        
        Private columnKeyProductTargetR As Global.System.Data.DataColumn
        
        Private columnSubKeyProductSalesR As Global.System.Data.DataColumn
        
        Private columnSubKeyProductTargetR As Global.System.Data.DataColumn
        
        Private columnTertiaryKeyProductSalesR As Global.System.Data.DataColumn
        
        Private columnTertiaryKeyProductTargetR As Global.System.Data.DataColumn
        
        Private columnExcessSalesR As Global.System.Data.DataColumn
        
        Private columnRepCountR As Global.System.Data.DataColumn
        
        Private columnQuadStormR As Global.System.Data.DataColumn
        
        Private columnCallRateR As Global.System.Data.DataColumn
        
        Private columnTargetR As Global.System.Data.DataColumn
        
        Private columnDivisionSalesR As Global.System.Data.DataColumn
        
        Private columnDivisionTargetR As Global.System.Data.DataColumn
        
        Private columnDistrictSalesR As Global.System.Data.DataColumn
        
        Private columnDistrictTargetR As Global.System.Data.DataColumn
        
        Private columnDivisionSales As Global.System.Data.DataColumn
        
        Private columnDivisionTarget As Global.System.Data.DataColumn
        
        Private columnDistrictSales As Global.System.Data.DataColumn
        
        Private columnDistrictTarget As Global.System.Data.DataColumn
        
        Private columnAbove85 As Global.System.Data.DataColumn
        
        Private columnAbove85Current As Global.System.Data.DataColumn
        
        Private columnAbove85Previous As Global.System.Data.DataColumn
        
        Private columnTrueDivision As Global.System.Data.DataColumn
        
        Private columnLateTag As Global.System.Data.DataColumn
        
        Private columnDSMNotIncluded As Global.System.Data.DataColumn
        
        Private columnLateTagR As Global.System.Data.DataColumn
        
        Private columnDSMNotIncludedR As Global.System.Data.DataColumn
        
        Private columnCombinedSales As Global.System.Data.DataColumn
        
        Private columnCombinedTarget As Global.System.Data.DataColumn
        
        Private columnCombinedSalesR As Global.System.Data.DataColumn
        
        Private columnCombinedTargetR As Global.System.Data.DataColumn
        
        Private columnCallRateProduct As Global.System.Data.DataColumn
        
        Private columnCallRateProductTarget As Global.System.Data.DataColumn
        
        Private columnCallRateProductR As Global.System.Data.DataColumn
        
        Private columnCallRateProductTargetR As Global.System.Data.DataColumn
        
        Private columnProduct1 As Global.System.Data.DataColumn
        
        Private columnProduct2 As Global.System.Data.DataColumn
        
        Private columnProduct3 As Global.System.Data.DataColumn
        
        Private columnProductCall1 As Global.System.Data.DataColumn
        
        Private columnProductCall2 As Global.System.Data.DataColumn
        
        Private columnProductCall3 As Global.System.Data.DataColumn
        
        Private columnProductTarget1 As Global.System.Data.DataColumn
        
        Private columnProductTarget2 As Global.System.Data.DataColumn
        
        Private columnProductTarget3 As Global.System.Data.DataColumn
        
        Private columnProduct1R As Global.System.Data.DataColumn
        
        Private columnProduct2R As Global.System.Data.DataColumn
        
        Private columnProduct3R As Global.System.Data.DataColumn
        
        Private columnProductCall1R As Global.System.Data.DataColumn
        
        Private columnProductCall2R As Global.System.Data.DataColumn
        
        Private columnProductCall3R As Global.System.Data.DataColumn
        
        Private columnProductTarget1R As Global.System.Data.DataColumn
        
        Private columnProductTarget2R As Global.System.Data.DataColumn
        
        Private columnProductTarget3R As Global.System.Data.DataColumn
        
        Private columnTeamDivision As Global.System.Data.DataColumn
        
        Private columnTeamDivisionR As Global.System.Data.DataColumn
        
        Private columnProduct1IncRate As Global.System.Data.DataColumn
        
        Private columnProduct2IncRate As Global.System.Data.DataColumn
        
        Private columnProduct3IncRate As Global.System.Data.DataColumn
        
        Private columnProduct1IncRateR As Global.System.Data.DataColumn
        
        Private columnProduct2IncRateR As Global.System.Data.DataColumn
        
        Private columnProduct3IncRateR As Global.System.Data.DataColumn
        
        Private columnProduct1Sales As Global.System.Data.DataColumn
        
        Private columnProduct2Sales As Global.System.Data.DataColumn
        
        Private columnProduct3Sales As Global.System.Data.DataColumn
        
        Private columnProduct1Budget As Global.System.Data.DataColumn
        
        Private columnProduct2Budget As Global.System.Data.DataColumn
        
        Private columnProduct3Budget As Global.System.Data.DataColumn
        
        Private columnProduct1SalesR As Global.System.Data.DataColumn
        
        Private columnProduct2SalesR As Global.System.Data.DataColumn
        
        Private columnProduct3SalesR As Global.System.Data.DataColumn
        
        Private columnProduct1BudgetR As Global.System.Data.DataColumn
        
        Private columnProduct2BudgetR As Global.System.Data.DataColumn
        
        Private columnProduct3BudgetR As Global.System.Data.DataColumn
        
        Private columnPushProductSales As Global.System.Data.DataColumn
        
        Private columnPushProductTarget As Global.System.Data.DataColumn
        
        Private columnPushProductSalesR As Global.System.Data.DataColumn
        
        Private columnPushProductTargetR As Global.System.Data.DataColumn
        
        Private columnQuadKeyProductSales As Global.System.Data.DataColumn
        
        Private columnQuadKeyProductTarget As Global.System.Data.DataColumn
        
        Private columnQuintKeyProductSales As Global.System.Data.DataColumn
        
        Private columnQuintKeyProductTarget As Global.System.Data.DataColumn
        
        Private columnQuadKeyProductSalesR As Global.System.Data.DataColumn
        
        Private columnQuadKeyProductTargetR As Global.System.Data.DataColumn
        
        Private columnQuintKeyProductSalesR As Global.System.Data.DataColumn
        
        Private columnQuintKeyProductTargetR As Global.System.Data.DataColumn
        
        Private columnPushProductsDesc As Global.System.Data.DataColumn
        
        Private columnKPflg As Global.System.Data.DataColumn
        
        Private columnpprod1 As Global.System.Data.DataColumn
        
        Private columnpprod2 As Global.System.Data.DataColumn
        
        Private columnpprod3 As Global.System.Data.DataColumn
        
        Private columnpprod4 As Global.System.Data.DataColumn
        
        Private columnpprod5 As Global.System.Data.DataColumn
        
        Private columnProduct4 As Global.System.Data.DataColumn
        
        Private columnProductCall4 As Global.System.Data.DataColumn
        
        Private columnProductTarget4 As Global.System.Data.DataColumn
        
        Private columnProduct4IncRate As Global.System.Data.DataColumn
        
        Private columnProduct4Sales As Global.System.Data.DataColumn
        
        Private columnProduct4Budget As Global.System.Data.DataColumn
        
        Private columnProduct4R As Global.System.Data.DataColumn
        
        Private columnProductCall4R As Global.System.Data.DataColumn
        
        Private columnProductTarget4R As Global.System.Data.DataColumn
        
        Private columnProduct4IncRateR As Global.System.Data.DataColumn
        
        Private columnProduct4SalesR As Global.System.Data.DataColumn
        
        Private columnProduct4BudgetR As Global.System.Data.DataColumn
        
        Private columnQueDoxQty As Global.System.Data.DataColumn
        
        Private columnDrSalesAmount As Global.System.Data.DataColumn
        
        Private columnDrTargetAmount As Global.System.Data.DataColumn
        
        Private columnDrSalesAmountR As Global.System.Data.DataColumn
        
        Private columnDrTargetAmountR As Global.System.Data.DataColumn
        
        Private columnTevanateQty As Global.System.Data.DataColumn
        
        Private columnOrigSalesPros As Global.System.Data.DataColumn
        
        Private columnOrigTargetPros As Global.System.Data.DataColumn
        
        Private columnOrigSalesProsR As Global.System.Data.DataColumn
        
        Private columnOrigTargetProsR As Global.System.Data.DataColumn
        
        Private columnDSMLateTag As Global.System.Data.DataColumn
        
        Private columnDSMLateTagR As Global.System.Data.DataColumn
        
        Private columnpprod6 As Global.System.Data.DataColumn
        
        Private columnSeptKeyProductSales As Global.System.Data.DataColumn
        
        Private columnSeptKeyProductTarget As Global.System.Data.DataColumn
        
        Private columnSeptKeyProductSalesR As Global.System.Data.DataColumn
        
        Private columnSeptKeyProductTargetR As Global.System.Data.DataColumn
        
        Private columnRate As Global.System.Data.DataColumn
        
        Private columnCallRate4x As Global.System.Data.DataColumn
        
        Private columnTarget4x As Global.System.Data.DataColumn
        
        Private columnRate4x As Global.System.Data.DataColumn
        
        Private columnCallRate2x As Global.System.Data.DataColumn
        
        Private columnTarget2x As Global.System.Data.DataColumn
        
        Private columnRate2x As Global.System.Data.DataColumn
        
        Private columnAreaCode As Global.System.Data.DataColumn
        
        Private columnAreaName As Global.System.Data.DataColumn
        
        Private columnAreaCodeR As Global.System.Data.DataColumn
        
        Private columnAreaNameR As Global.System.Data.DataColumn
        
        Private columnDistrictCode As Global.System.Data.DataColumn
        
        Private columnDistrictName As Global.System.Data.DataColumn
        
        Private columnDistrictCodeR As Global.System.Data.DataColumn
        
        Private columnDistrictNameR As Global.System.Data.DataColumn
        
        Private columnCallReach2X As Global.System.Data.DataColumn
        
        Private columnTargetReach2X As Global.System.Data.DataColumn
        
        Private columnRateReach2X As Global.System.Data.DataColumn
        
        Private columnCallReach4X As Global.System.Data.DataColumn
        
        Private columnTargetReach4X As Global.System.Data.DataColumn
        
        Private columnRateReach4X As Global.System.Data.DataColumn
        
        Private columnCallReach2XR As Global.System.Data.DataColumn
        
        Private columnTargetReach2XR As Global.System.Data.DataColumn
        
        Private columnRateReach2XR As Global.System.Data.DataColumn
        
        Private columnCallReach4XR As Global.System.Data.DataColumn
        
        Private columnTargetReach4XR As Global.System.Data.DataColumn
        
        Private columnRateReach4XR As Global.System.Data.DataColumn
        
        Private columnCallRate4XR As Global.System.Data.DataColumn
        
        Private columnTarget4XR As Global.System.Data.DataColumn
        
        Private columnRate4XR As Global.System.Data.DataColumn
        
        Private columnCallRate2XR As Global.System.Data.DataColumn
        
        Private columnTarget2XR As Global.System.Data.DataColumn
        
        Private columnRate2XR As Global.System.Data.DataColumn
        
        Private columnCallReach As Global.System.Data.DataColumn
        
        Private columnTargetReach As Global.System.Data.DataColumn
        
        Private columnRateReach As Global.System.Data.DataColumn
        
        Private columnCallReachR As Global.System.Data.DataColumn
        
        Private columnTargetReachR As Global.System.Data.DataColumn
        
        Private columnRateReachR As Global.System.Data.DataColumn
        
        Private columnRateR As Global.System.Data.DataColumn
        
        Private columnAbove85PrevCom As Global.System.Data.DataColumn
        
        Private columnTeamName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ComIncRecover"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RowidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRowid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OriginalSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OriginalTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdjustedSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjustedSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdjustedTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjustedTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisionPerformanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisionPerformance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistrictPerformanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrictPerformance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BasicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyProductSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyProductSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyProductTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyProductTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubKeyProductSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubKeyProductSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubKeyProductTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubKeyProductTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TertiaryKeyProductSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTertiaryKeyProductSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TertiaryKeyProductTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTertiaryKeyProductTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExcessSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RepCountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRepCount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuadStormColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuadStorm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdjustedCallRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjustedCallRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdjustedCallTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjustedCallTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SupCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SupNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MrCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMrCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MrNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMrName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CommissionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCommissionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OriginalSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OriginalTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdjustedSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjustedSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdjustedTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjustedTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisionRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisionR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisionPerformanceRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisionPerformanceR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistrictPerformanceRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrictPerformanceR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BasicRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBasicR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyProductRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyProductR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyProductSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyProductSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyProductTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyProductTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubKeyProductSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubKeyProductSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubKeyProductTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubKeyProductTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TertiaryKeyProductSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTertiaryKeyProductSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TertiaryKeyProductTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTertiaryKeyProductTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExcessSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExcessSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RepCountRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRepCountR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuadStormRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuadStormR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallRateRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallRateR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisionSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisionSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisionTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisionTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistrictSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrictSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistrictTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrictTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisionSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisionSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DivisionTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivisionTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistrictSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrictSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistrictTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrictTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Above85Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbove85
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Above85CurrentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbove85Current
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Above85PreviousColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbove85Previous
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TrueDivisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrueDivision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LateTagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLateTag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DSMNotIncludedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDSMNotIncluded
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LateTagRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLateTagR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DSMNotIncludedRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDSMNotIncludedR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CombinedSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCombinedSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CombinedTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCombinedTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CombinedSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCombinedSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CombinedTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCombinedTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallRateProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallRateProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallRateProductTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallRateProductTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallRateProductRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallRateProductR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallRateProductTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallRateProductTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductCall1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductCall1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductCall2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductCall2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductCall3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductCall3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductTarget1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductTarget1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductTarget2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductTarget2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductTarget3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductTarget3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product1RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct1R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product2RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct2R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product3RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct3R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductCall1RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductCall1R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductCall2RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductCall2R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductCall3RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductCall3R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductTarget1RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductTarget1R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductTarget2RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductTarget2R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductTarget3RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductTarget3R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TeamDivisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeamDivision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TeamDivisionRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeamDivisionR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product1IncRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct1IncRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product2IncRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct2IncRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product3IncRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct3IncRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product1IncRateRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct1IncRateR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product2IncRateRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct2IncRateR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product3IncRateRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct3IncRateR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product1SalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct1Sales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product2SalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct2Sales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product3SalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct3Sales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product1BudgetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct1Budget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product2BudgetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct2Budget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product3BudgetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct3Budget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product1SalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct1SalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product2SalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct2SalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product3SalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct3SalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product1BudgetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct1BudgetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product2BudgetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct2BudgetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product3BudgetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct3BudgetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PushProductSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPushProductSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PushProductTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPushProductTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PushProductSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPushProductSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PushProductTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPushProductTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuadKeyProductSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuadKeyProductSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuadKeyProductTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuadKeyProductTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuintKeyProductSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuintKeyProductSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuintKeyProductTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuintKeyProductTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuadKeyProductSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuadKeyProductSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuadKeyProductTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuadKeyProductTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuintKeyProductSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuintKeyProductSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QuintKeyProductTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQuintKeyProductTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PushProductsDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPushProductsDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KPflgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKPflg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pprod1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnpprod1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pprod2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnpprod2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pprod3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnpprod3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pprod4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnpprod4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pprod5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnpprod5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductCall4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductCall4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductTarget4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductTarget4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product4IncRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct4IncRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product4SalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct4Sales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product4BudgetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct4Budget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product4RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct4R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductCall4RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductCall4R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductTarget4RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProductTarget4R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product4IncRateRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct4IncRateR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product4SalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct4SalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product4BudgetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct4BudgetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QueDoxQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQueDoxQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DrSalesAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrSalesAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DrTargetAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrTargetAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DrSalesAmountRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrSalesAmountR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DrTargetAmountRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrTargetAmountR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TevanateQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTevanateQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrigSalesProsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrigSalesPros
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrigTargetProsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrigTargetPros
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrigSalesProsRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrigSalesProsR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrigTargetProsRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrigTargetProsR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DSMLateTagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDSMLateTag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DSMLateTagRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDSMLateTagR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pprod6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnpprod6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SeptKeyProductSalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeptKeyProductSales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SeptKeyProductTargetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeptKeyProductTarget
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SeptKeyProductSalesRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeptKeyProductSalesR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SeptKeyProductTargetRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeptKeyProductTargetR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallRate4xColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallRate4x
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Target4xColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarget4x
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Rate4xColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRate4x
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallRate2xColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallRate2x
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Target2xColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarget2x
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Rate2xColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRate2x
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaCodeRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaCodeR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaNameRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAreaNameR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistrictCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrictCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistrictNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrictName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistrictCodeRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrictCodeR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DistrictNameRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDistrictNameR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallReach2XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallReach2X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetReach2XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetReach2X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RateReach2XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRateReach2X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallReach4XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallReach4X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetReach4XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetReach4X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RateReach4XColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRateReach4X
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallReach2XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallReach2XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetReach2XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetReach2XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RateReach2XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRateReach2XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallReach4XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallReach4XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetReach4XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetReach4XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RateReach4XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRateReach4XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallRate4XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallRate4XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Target4XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarget4XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Rate4XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRate4XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallRate2XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallRate2XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Target2XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarget2XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Rate2XRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRate2XR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallReachColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallReach
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetReachColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetReach
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RateReachColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRateReach
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CallReachRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCallReachR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TargetReachRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTargetReachR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RateReachRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRateReachR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RateRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRateR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Above85PrevComColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbove85PrevCom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TeamNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeamName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ComIncRecoverRow
            Get
                Return CType(Me.Rows(index),ComIncRecoverRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComIncRecoverRowChanging As ComIncRecoverRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComIncRecoverRowChanged As ComIncRecoverRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComIncRecoverRowDeleting As ComIncRecoverRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComIncRecoverRowDeleted As ComIncRecoverRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddComIncRecoverRow(ByVal row As ComIncRecoverRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddComIncRecoverRow( _
                    ByVal OriginalSales As Decimal,  _
                    ByVal OriginalTarget As Decimal,  _
                    ByVal AdjustedSales As Decimal,  _
                    ByVal AdjustedTarget As Decimal,  _
                    ByVal Division As String,  _
                    ByVal DivisionPerformance As Decimal,  _
                    ByVal DistrictPerformance As Decimal,  _
                    ByVal Basic As Decimal,  _
                    ByVal KeyProduct As Decimal,  _
                    ByVal KeyProductSales As Decimal,  _
                    ByVal KeyProductTarget As Decimal,  _
                    ByVal SubKeyProductSales As Decimal,  _
                    ByVal SubKeyProductTarget As Decimal,  _
                    ByVal TertiaryKeyProductSales As Decimal,  _
                    ByVal TertiaryKeyProductTarget As Decimal,  _
                    ByVal ExcessSales As Decimal,  _
                    ByVal RepCount As Integer,  _
                    ByVal QuadStorm As Decimal,  _
                    ByVal CallRate As Decimal,  _
                    ByVal Target As Decimal,  _
                    ByVal AdjustedCallRate As Decimal,  _
                    ByVal AdjustedCallTarget As Decimal,  _
                    ByVal SupCode As String,  _
                    ByVal SupName As String,  _
                    ByVal MrCode As String,  _
                    ByVal MrName As String,  _
                    ByVal CommissionDate As Date,  _
                    ByVal OriginalSalesR As Decimal,  _
                    ByVal OriginalTargetR As Decimal,  _
                    ByVal AdjustedSalesR As Decimal,  _
                    ByVal AdjustedTargetR As Decimal,  _
                    ByVal DivisionR As String,  _
                    ByVal DivisionPerformanceR As Decimal,  _
                    ByVal DistrictPerformanceR As Decimal,  _
                    ByVal BasicR As Decimal,  _
                    ByVal KeyProductR As Decimal,  _
                    ByVal KeyProductSalesR As Decimal,  _
                    ByVal KeyProductTargetR As Decimal,  _
                    ByVal SubKeyProductSalesR As Decimal,  _
                    ByVal SubKeyProductTargetR As Decimal,  _
                    ByVal TertiaryKeyProductSalesR As Decimal,  _
                    ByVal TertiaryKeyProductTargetR As Decimal,  _
                    ByVal ExcessSalesR As Decimal,  _
                    ByVal RepCountR As Integer,  _
                    ByVal QuadStormR As Decimal,  _
                    ByVal CallRateR As Decimal,  _
                    ByVal TargetR As Decimal,  _
                    ByVal DivisionSalesR As Decimal,  _
                    ByVal DivisionTargetR As Decimal,  _
                    ByVal DistrictSalesR As Decimal,  _
                    ByVal DistrictTargetR As Decimal,  _
                    ByVal DivisionSales As Decimal,  _
                    ByVal DivisionTarget As Decimal,  _
                    ByVal DistrictSales As Decimal,  _
                    ByVal DistrictTarget As Decimal,  _
                    ByVal Above85 As Integer,  _
                    ByVal Above85Current As Integer,  _
                    ByVal Above85Previous As Integer,  _
                    ByVal TrueDivision As String,  _
                    ByVal LateTag As String,  _
                    ByVal DSMNotIncluded As String,  _
                    ByVal LateTagR As String,  _
                    ByVal DSMNotIncludedR As String,  _
                    ByVal CombinedSales As Decimal,  _
                    ByVal CombinedTarget As Decimal,  _
                    ByVal CombinedSalesR As Decimal,  _
                    ByVal CombinedTargetR As Decimal,  _
                    ByVal CallRateProduct As Decimal,  _
                    ByVal CallRateProductTarget As Decimal,  _
                    ByVal CallRateProductR As Decimal,  _
                    ByVal CallRateProductTargetR As Decimal,  _
                    ByVal Product1 As String,  _
                    ByVal Product2 As String,  _
                    ByVal Product3 As String,  _
                    ByVal ProductCall1 As Decimal,  _
                    ByVal ProductCall2 As Decimal,  _
                    ByVal ProductCall3 As Decimal,  _
                    ByVal ProductTarget1 As Decimal,  _
                    ByVal ProductTarget2 As Decimal,  _
                    ByVal ProductTarget3 As Decimal,  _
                    ByVal Product1R As String,  _
                    ByVal Product2R As String,  _
                    ByVal Product3R As String,  _
                    ByVal ProductCall1R As Decimal,  _
                    ByVal ProductCall2R As Decimal,  _
                    ByVal ProductCall3R As Decimal,  _
                    ByVal ProductTarget1R As Decimal,  _
                    ByVal ProductTarget2R As Decimal,  _
                    ByVal ProductTarget3R As Decimal,  _
                    ByVal TeamDivision As String,  _
                    ByVal TeamDivisionR As String,  _
                    ByVal Product1IncRate As Decimal,  _
                    ByVal Product2IncRate As Decimal,  _
                    ByVal Product3IncRate As Decimal,  _
                    ByVal Product1IncRateR As Decimal,  _
                    ByVal Product2IncRateR As Decimal,  _
                    ByVal Product3IncRateR As Decimal,  _
                    ByVal Product1Sales As Decimal,  _
                    ByVal Product2Sales As Decimal,  _
                    ByVal Product3Sales As Decimal,  _
                    ByVal Product1Budget As Decimal,  _
                    ByVal Product2Budget As Decimal,  _
                    ByVal Product3Budget As Decimal,  _
                    ByVal Product1SalesR As Decimal,  _
                    ByVal Product2SalesR As Decimal,  _
                    ByVal Product3SalesR As Decimal,  _
                    ByVal Product1BudgetR As Decimal,  _
                    ByVal Product2BudgetR As Decimal,  _
                    ByVal Product3BudgetR As Decimal,  _
                    ByVal PushProductSales As Decimal,  _
                    ByVal PushProductTarget As Decimal,  _
                    ByVal PushProductSalesR As Decimal,  _
                    ByVal PushProductTargetR As Decimal,  _
                    ByVal QuadKeyProductSales As Decimal,  _
                    ByVal QuadKeyProductTarget As Decimal,  _
                    ByVal QuintKeyProductSales As Decimal,  _
                    ByVal QuintKeyProductTarget As Decimal,  _
                    ByVal QuadKeyProductSalesR As Decimal,  _
                    ByVal QuadKeyProductTargetR As Decimal,  _
                    ByVal QuintKeyProductSalesR As Decimal,  _
                    ByVal QuintKeyProductTargetR As Decimal,  _
                    ByVal PushProductsDesc As String,  _
                    ByVal KPflg As Integer,  _
                    ByVal pprod1 As String,  _
                    ByVal pprod2 As String,  _
                    ByVal pprod3 As String,  _
                    ByVal pprod4 As String,  _
                    ByVal pprod5 As String,  _
                    ByVal Product4 As String,  _
                    ByVal ProductCall4 As Decimal,  _
                    ByVal ProductTarget4 As Decimal,  _
                    ByVal Product4IncRate As Decimal,  _
                    ByVal Product4Sales As Decimal,  _
                    ByVal Product4Budget As Decimal,  _
                    ByVal Product4R As String,  _
                    ByVal ProductCall4R As Decimal,  _
                    ByVal ProductTarget4R As Decimal,  _
                    ByVal Product4IncRateR As Decimal,  _
                    ByVal Product4SalesR As Decimal,  _
                    ByVal Product4BudgetR As Decimal,  _
                    ByVal QueDoxQty As Decimal,  _
                    ByVal DrSalesAmount As Decimal,  _
                    ByVal DrTargetAmount As Decimal,  _
                    ByVal DrSalesAmountR As Decimal,  _
                    ByVal DrTargetAmountR As Decimal,  _
                    ByVal TevanateQty As Decimal,  _
                    ByVal OrigSalesPros As Decimal,  _
                    ByVal OrigTargetPros As Decimal,  _
                    ByVal OrigSalesProsR As Decimal,  _
                    ByVal OrigTargetProsR As Decimal,  _
                    ByVal DSMLateTag As String,  _
                    ByVal DSMLateTagR As String,  _
                    ByVal pprod6 As String,  _
                    ByVal SeptKeyProductSales As Decimal,  _
                    ByVal SeptKeyProductTarget As Decimal,  _
                    ByVal SeptKeyProductSalesR As Decimal,  _
                    ByVal SeptKeyProductTargetR As Decimal,  _
                    ByVal Rate As Decimal,  _
                    ByVal CallRate4x As Decimal,  _
                    ByVal Target4x As Decimal,  _
                    ByVal Rate4x As Decimal,  _
                    ByVal CallRate2x As Decimal,  _
                    ByVal Target2x As Decimal,  _
                    ByVal Rate2x As Decimal,  _
                    ByVal AreaCode As String,  _
                    ByVal AreaName As String,  _
                    ByVal AreaCodeR As String,  _
                    ByVal AreaNameR As String,  _
                    ByVal DistrictCode As String,  _
                    ByVal DistrictName As String,  _
                    ByVal DistrictCodeR As String,  _
                    ByVal DistrictNameR As String,  _
                    ByVal CallReach2X As Decimal,  _
                    ByVal TargetReach2X As Decimal,  _
                    ByVal RateReach2X As Decimal,  _
                    ByVal CallReach4X As Decimal,  _
                    ByVal TargetReach4X As Decimal,  _
                    ByVal RateReach4X As Decimal,  _
                    ByVal CallReach2XR As Decimal,  _
                    ByVal TargetReach2XR As Decimal,  _
                    ByVal RateReach2XR As Decimal,  _
                    ByVal CallReach4XR As Decimal,  _
                    ByVal TargetReach4XR As Decimal,  _
                    ByVal RateReach4XR As Decimal,  _
                    ByVal CallRate4XR As Decimal,  _
                    ByVal Target4XR As Decimal,  _
                    ByVal Rate4XR As Decimal,  _
                    ByVal CallRate2XR As Decimal,  _
                    ByVal Target2XR As Decimal,  _
                    ByVal Rate2XR As Decimal,  _
                    ByVal CallReach As Decimal,  _
                    ByVal TargetReach As Decimal,  _
                    ByVal RateReach As Decimal,  _
                    ByVal CallReachR As Decimal,  _
                    ByVal TargetReachR As Decimal,  _
                    ByVal RateReachR As Decimal,  _
                    ByVal RateR As Decimal,  _
                    ByVal Above85PrevCom As String,  _
                    ByVal TeamName As String) As ComIncRecoverRow
            Dim rowComIncRecoverRow As ComIncRecoverRow = CType(Me.NewRow,ComIncRecoverRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, OriginalSales, OriginalTarget, AdjustedSales, AdjustedTarget, Division, DivisionPerformance, DistrictPerformance, Basic, KeyProduct, KeyProductSales, KeyProductTarget, SubKeyProductSales, SubKeyProductTarget, TertiaryKeyProductSales, TertiaryKeyProductTarget, ExcessSales, RepCount, QuadStorm, CallRate, Target, AdjustedCallRate, AdjustedCallTarget, SupCode, SupName, MrCode, MrName, CommissionDate, OriginalSalesR, OriginalTargetR, AdjustedSalesR, AdjustedTargetR, DivisionR, DivisionPerformanceR, DistrictPerformanceR, BasicR, KeyProductR, KeyProductSalesR, KeyProductTargetR, SubKeyProductSalesR, SubKeyProductTargetR, TertiaryKeyProductSalesR, TertiaryKeyProductTargetR, ExcessSalesR, RepCountR, QuadStormR, CallRateR, TargetR, DivisionSalesR, DivisionTargetR, DistrictSalesR, DistrictTargetR, DivisionSales, DivisionTarget, DistrictSales, DistrictTarget, Above85, Above85Current, Above85Previous, TrueDivision, LateTag, DSMNotIncluded, LateTagR, DSMNotIncludedR, CombinedSales, CombinedTarget, CombinedSalesR, CombinedTargetR, CallRateProduct, CallRateProductTarget, CallRateProductR, CallRateProductTargetR, Product1, Product2, Product3, ProductCall1, ProductCall2, ProductCall3, ProductTarget1, ProductTarget2, ProductTarget3, Product1R, Product2R, Product3R, ProductCall1R, ProductCall2R, ProductCall3R, ProductTarget1R, ProductTarget2R, ProductTarget3R, TeamDivision, TeamDivisionR, Product1IncRate, Product2IncRate, Product3IncRate, Product1IncRateR, Product2IncRateR, Product3IncRateR, Product1Sales, Product2Sales, Product3Sales, Product1Budget, Product2Budget, Product3Budget, Product1SalesR, Product2SalesR, Product3SalesR, Product1BudgetR, Product2BudgetR, Product3BudgetR, PushProductSales, PushProductTarget, PushProductSalesR, PushProductTargetR, QuadKeyProductSales, QuadKeyProductTarget, QuintKeyProductSales, QuintKeyProductTarget, QuadKeyProductSalesR, QuadKeyProductTargetR, QuintKeyProductSalesR, QuintKeyProductTargetR, PushProductsDesc, KPflg, pprod1, pprod2, pprod3, pprod4, pprod5, Product4, ProductCall4, ProductTarget4, Product4IncRate, Product4Sales, Product4Budget, Product4R, ProductCall4R, ProductTarget4R, Product4IncRateR, Product4SalesR, Product4BudgetR, QueDoxQty, DrSalesAmount, DrTargetAmount, DrSalesAmountR, DrTargetAmountR, TevanateQty, OrigSalesPros, OrigTargetPros, OrigSalesProsR, OrigTargetProsR, DSMLateTag, DSMLateTagR, pprod6, SeptKeyProductSales, SeptKeyProductTarget, SeptKeyProductSalesR, SeptKeyProductTargetR, Rate, CallRate4x, Target4x, Rate4x, CallRate2x, Target2x, Rate2x, AreaCode, AreaName, AreaCodeR, AreaNameR, DistrictCode, DistrictName, DistrictCodeR, DistrictNameR, CallReach2X, TargetReach2X, RateReach2X, CallReach4X, TargetReach4X, RateReach4X, CallReach2XR, TargetReach2XR, RateReach2XR, CallReach4XR, TargetReach4XR, RateReach4XR, CallRate4XR, Target4XR, Rate4XR, CallRate2XR, Target2XR, Rate2XR, CallReach, TargetReach, RateReach, CallReachR, TargetReachR, RateReachR, RateR, Above85PrevCom, TeamName}
            rowComIncRecoverRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowComIncRecoverRow)
            Return rowComIncRecoverRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ComIncRecoverDataTable = CType(MyBase.Clone,ComIncRecoverDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ComIncRecoverDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRowid = MyBase.Columns("Rowid")
            Me.columnOriginalSales = MyBase.Columns("OriginalSales")
            Me.columnOriginalTarget = MyBase.Columns("OriginalTarget")
            Me.columnAdjustedSales = MyBase.Columns("AdjustedSales")
            Me.columnAdjustedTarget = MyBase.Columns("AdjustedTarget")
            Me.columnDivision = MyBase.Columns("Division")
            Me.columnDivisionPerformance = MyBase.Columns("DivisionPerformance")
            Me.columnDistrictPerformance = MyBase.Columns("DistrictPerformance")
            Me.columnBasic = MyBase.Columns("Basic")
            Me.columnKeyProduct = MyBase.Columns("KeyProduct")
            Me.columnKeyProductSales = MyBase.Columns("KeyProductSales")
            Me.columnKeyProductTarget = MyBase.Columns("KeyProductTarget")
            Me.columnSubKeyProductSales = MyBase.Columns("SubKeyProductSales")
            Me.columnSubKeyProductTarget = MyBase.Columns("SubKeyProductTarget")
            Me.columnTertiaryKeyProductSales = MyBase.Columns("TertiaryKeyProductSales")
            Me.columnTertiaryKeyProductTarget = MyBase.Columns("TertiaryKeyProductTarget")
            Me.columnExcessSales = MyBase.Columns("ExcessSales")
            Me.columnRepCount = MyBase.Columns("RepCount")
            Me.columnQuadStorm = MyBase.Columns("QuadStorm")
            Me.columnCallRate = MyBase.Columns("CallRate")
            Me.columnTarget = MyBase.Columns("Target")
            Me.columnAdjustedCallRate = MyBase.Columns("AdjustedCallRate")
            Me.columnAdjustedCallTarget = MyBase.Columns("AdjustedCallTarget")
            Me.columnSupCode = MyBase.Columns("SupCode")
            Me.columnSupName = MyBase.Columns("SupName")
            Me.columnMrCode = MyBase.Columns("MrCode")
            Me.columnMrName = MyBase.Columns("MrName")
            Me.columnCommissionDate = MyBase.Columns("CommissionDate")
            Me.columnOriginalSalesR = MyBase.Columns("OriginalSalesR")
            Me.columnOriginalTargetR = MyBase.Columns("OriginalTargetR")
            Me.columnAdjustedSalesR = MyBase.Columns("AdjustedSalesR")
            Me.columnAdjustedTargetR = MyBase.Columns("AdjustedTargetR")
            Me.columnDivisionR = MyBase.Columns("DivisionR")
            Me.columnDivisionPerformanceR = MyBase.Columns("DivisionPerformanceR")
            Me.columnDistrictPerformanceR = MyBase.Columns("DistrictPerformanceR")
            Me.columnBasicR = MyBase.Columns("BasicR")
            Me.columnKeyProductR = MyBase.Columns("KeyProductR")
            Me.columnKeyProductSalesR = MyBase.Columns("KeyProductSalesR")
            Me.columnKeyProductTargetR = MyBase.Columns("KeyProductTargetR")
            Me.columnSubKeyProductSalesR = MyBase.Columns("SubKeyProductSalesR")
            Me.columnSubKeyProductTargetR = MyBase.Columns("SubKeyProductTargetR")
            Me.columnTertiaryKeyProductSalesR = MyBase.Columns("TertiaryKeyProductSalesR")
            Me.columnTertiaryKeyProductTargetR = MyBase.Columns("TertiaryKeyProductTargetR")
            Me.columnExcessSalesR = MyBase.Columns("ExcessSalesR")
            Me.columnRepCountR = MyBase.Columns("RepCountR")
            Me.columnQuadStormR = MyBase.Columns("QuadStormR")
            Me.columnCallRateR = MyBase.Columns("CallRateR")
            Me.columnTargetR = MyBase.Columns("TargetR")
            Me.columnDivisionSalesR = MyBase.Columns("DivisionSalesR")
            Me.columnDivisionTargetR = MyBase.Columns("DivisionTargetR")
            Me.columnDistrictSalesR = MyBase.Columns("DistrictSalesR")
            Me.columnDistrictTargetR = MyBase.Columns("DistrictTargetR")
            Me.columnDivisionSales = MyBase.Columns("DivisionSales")
            Me.columnDivisionTarget = MyBase.Columns("DivisionTarget")
            Me.columnDistrictSales = MyBase.Columns("DistrictSales")
            Me.columnDistrictTarget = MyBase.Columns("DistrictTarget")
            Me.columnAbove85 = MyBase.Columns("Above85")
            Me.columnAbove85Current = MyBase.Columns("Above85Current")
            Me.columnAbove85Previous = MyBase.Columns("Above85Previous")
            Me.columnTrueDivision = MyBase.Columns("TrueDivision")
            Me.columnLateTag = MyBase.Columns("LateTag")
            Me.columnDSMNotIncluded = MyBase.Columns("DSMNotIncluded")
            Me.columnLateTagR = MyBase.Columns("LateTagR")
            Me.columnDSMNotIncludedR = MyBase.Columns("DSMNotIncludedR")
            Me.columnCombinedSales = MyBase.Columns("CombinedSales")
            Me.columnCombinedTarget = MyBase.Columns("CombinedTarget")
            Me.columnCombinedSalesR = MyBase.Columns("CombinedSalesR")
            Me.columnCombinedTargetR = MyBase.Columns("CombinedTargetR")
            Me.columnCallRateProduct = MyBase.Columns("CallRateProduct")
            Me.columnCallRateProductTarget = MyBase.Columns("CallRateProductTarget")
            Me.columnCallRateProductR = MyBase.Columns("CallRateProductR")
            Me.columnCallRateProductTargetR = MyBase.Columns("CallRateProductTargetR")
            Me.columnProduct1 = MyBase.Columns("Product1")
            Me.columnProduct2 = MyBase.Columns("Product2")
            Me.columnProduct3 = MyBase.Columns("Product3")
            Me.columnProductCall1 = MyBase.Columns("ProductCall1")
            Me.columnProductCall2 = MyBase.Columns("ProductCall2")
            Me.columnProductCall3 = MyBase.Columns("ProductCall3")
            Me.columnProductTarget1 = MyBase.Columns("ProductTarget1")
            Me.columnProductTarget2 = MyBase.Columns("ProductTarget2")
            Me.columnProductTarget3 = MyBase.Columns("ProductTarget3")
            Me.columnProduct1R = MyBase.Columns("Product1R")
            Me.columnProduct2R = MyBase.Columns("Product2R")
            Me.columnProduct3R = MyBase.Columns("Product3R")
            Me.columnProductCall1R = MyBase.Columns("ProductCall1R")
            Me.columnProductCall2R = MyBase.Columns("ProductCall2R")
            Me.columnProductCall3R = MyBase.Columns("ProductCall3R")
            Me.columnProductTarget1R = MyBase.Columns("ProductTarget1R")
            Me.columnProductTarget2R = MyBase.Columns("ProductTarget2R")
            Me.columnProductTarget3R = MyBase.Columns("ProductTarget3R")
            Me.columnTeamDivision = MyBase.Columns("TeamDivision")
            Me.columnTeamDivisionR = MyBase.Columns("TeamDivisionR")
            Me.columnProduct1IncRate = MyBase.Columns("Product1IncRate")
            Me.columnProduct2IncRate = MyBase.Columns("Product2IncRate")
            Me.columnProduct3IncRate = MyBase.Columns("Product3IncRate")
            Me.columnProduct1IncRateR = MyBase.Columns("Product1IncRateR")
            Me.columnProduct2IncRateR = MyBase.Columns("Product2IncRateR")
            Me.columnProduct3IncRateR = MyBase.Columns("Product3IncRateR")
            Me.columnProduct1Sales = MyBase.Columns("Product1Sales")
            Me.columnProduct2Sales = MyBase.Columns("Product2Sales")
            Me.columnProduct3Sales = MyBase.Columns("Product3Sales")
            Me.columnProduct1Budget = MyBase.Columns("Product1Budget")
            Me.columnProduct2Budget = MyBase.Columns("Product2Budget")
            Me.columnProduct3Budget = MyBase.Columns("Product3Budget")
            Me.columnProduct1SalesR = MyBase.Columns("Product1SalesR")
            Me.columnProduct2SalesR = MyBase.Columns("Product2SalesR")
            Me.columnProduct3SalesR = MyBase.Columns("Product3SalesR")
            Me.columnProduct1BudgetR = MyBase.Columns("Product1BudgetR")
            Me.columnProduct2BudgetR = MyBase.Columns("Product2BudgetR")
            Me.columnProduct3BudgetR = MyBase.Columns("Product3BudgetR")
            Me.columnPushProductSales = MyBase.Columns("PushProductSales")
            Me.columnPushProductTarget = MyBase.Columns("PushProductTarget")
            Me.columnPushProductSalesR = MyBase.Columns("PushProductSalesR")
            Me.columnPushProductTargetR = MyBase.Columns("PushProductTargetR")
            Me.columnQuadKeyProductSales = MyBase.Columns("QuadKeyProductSales")
            Me.columnQuadKeyProductTarget = MyBase.Columns("QuadKeyProductTarget")
            Me.columnQuintKeyProductSales = MyBase.Columns("QuintKeyProductSales")
            Me.columnQuintKeyProductTarget = MyBase.Columns("QuintKeyProductTarget")
            Me.columnQuadKeyProductSalesR = MyBase.Columns("QuadKeyProductSalesR")
            Me.columnQuadKeyProductTargetR = MyBase.Columns("QuadKeyProductTargetR")
            Me.columnQuintKeyProductSalesR = MyBase.Columns("QuintKeyProductSalesR")
            Me.columnQuintKeyProductTargetR = MyBase.Columns("QuintKeyProductTargetR")
            Me.columnPushProductsDesc = MyBase.Columns("PushProductsDesc")
            Me.columnKPflg = MyBase.Columns("KPflg")
            Me.columnpprod1 = MyBase.Columns("pprod1")
            Me.columnpprod2 = MyBase.Columns("pprod2")
            Me.columnpprod3 = MyBase.Columns("pprod3")
            Me.columnpprod4 = MyBase.Columns("pprod4")
            Me.columnpprod5 = MyBase.Columns("pprod5")
            Me.columnProduct4 = MyBase.Columns("Product4")
            Me.columnProductCall4 = MyBase.Columns("ProductCall4")
            Me.columnProductTarget4 = MyBase.Columns("ProductTarget4")
            Me.columnProduct4IncRate = MyBase.Columns("Product4IncRate")
            Me.columnProduct4Sales = MyBase.Columns("Product4Sales")
            Me.columnProduct4Budget = MyBase.Columns("Product4Budget")
            Me.columnProduct4R = MyBase.Columns("Product4R")
            Me.columnProductCall4R = MyBase.Columns("ProductCall4R")
            Me.columnProductTarget4R = MyBase.Columns("ProductTarget4R")
            Me.columnProduct4IncRateR = MyBase.Columns("Product4IncRateR")
            Me.columnProduct4SalesR = MyBase.Columns("Product4SalesR")
            Me.columnProduct4BudgetR = MyBase.Columns("Product4BudgetR")
            Me.columnQueDoxQty = MyBase.Columns("QueDoxQty")
            Me.columnDrSalesAmount = MyBase.Columns("DrSalesAmount")
            Me.columnDrTargetAmount = MyBase.Columns("DrTargetAmount")
            Me.columnDrSalesAmountR = MyBase.Columns("DrSalesAmountR")
            Me.columnDrTargetAmountR = MyBase.Columns("DrTargetAmountR")
            Me.columnTevanateQty = MyBase.Columns("TevanateQty")
            Me.columnOrigSalesPros = MyBase.Columns("OrigSalesPros")
            Me.columnOrigTargetPros = MyBase.Columns("OrigTargetPros")
            Me.columnOrigSalesProsR = MyBase.Columns("OrigSalesProsR")
            Me.columnOrigTargetProsR = MyBase.Columns("OrigTargetProsR")
            Me.columnDSMLateTag = MyBase.Columns("DSMLateTag")
            Me.columnDSMLateTagR = MyBase.Columns("DSMLateTagR")
            Me.columnpprod6 = MyBase.Columns("pprod6")
            Me.columnSeptKeyProductSales = MyBase.Columns("SeptKeyProductSales")
            Me.columnSeptKeyProductTarget = MyBase.Columns("SeptKeyProductTarget")
            Me.columnSeptKeyProductSalesR = MyBase.Columns("SeptKeyProductSalesR")
            Me.columnSeptKeyProductTargetR = MyBase.Columns("SeptKeyProductTargetR")
            Me.columnRate = MyBase.Columns("Rate")
            Me.columnCallRate4x = MyBase.Columns("CallRate4x")
            Me.columnTarget4x = MyBase.Columns("Target4x")
            Me.columnRate4x = MyBase.Columns("Rate4x")
            Me.columnCallRate2x = MyBase.Columns("CallRate2x")
            Me.columnTarget2x = MyBase.Columns("Target2x")
            Me.columnRate2x = MyBase.Columns("Rate2x")
            Me.columnAreaCode = MyBase.Columns("AreaCode")
            Me.columnAreaName = MyBase.Columns("AreaName")
            Me.columnAreaCodeR = MyBase.Columns("AreaCodeR")
            Me.columnAreaNameR = MyBase.Columns("AreaNameR")
            Me.columnDistrictCode = MyBase.Columns("DistrictCode")
            Me.columnDistrictName = MyBase.Columns("DistrictName")
            Me.columnDistrictCodeR = MyBase.Columns("DistrictCodeR")
            Me.columnDistrictNameR = MyBase.Columns("DistrictNameR")
            Me.columnCallReach2X = MyBase.Columns("CallReach2X")
            Me.columnTargetReach2X = MyBase.Columns("TargetReach2X")
            Me.columnRateReach2X = MyBase.Columns("RateReach2X")
            Me.columnCallReach4X = MyBase.Columns("CallReach4X")
            Me.columnTargetReach4X = MyBase.Columns("TargetReach4X")
            Me.columnRateReach4X = MyBase.Columns("RateReach4X")
            Me.columnCallReach2XR = MyBase.Columns("CallReach2XR")
            Me.columnTargetReach2XR = MyBase.Columns("TargetReach2XR")
            Me.columnRateReach2XR = MyBase.Columns("RateReach2XR")
            Me.columnCallReach4XR = MyBase.Columns("CallReach4XR")
            Me.columnTargetReach4XR = MyBase.Columns("TargetReach4XR")
            Me.columnRateReach4XR = MyBase.Columns("RateReach4XR")
            Me.columnCallRate4XR = MyBase.Columns("CallRate4XR")
            Me.columnTarget4XR = MyBase.Columns("Target4XR")
            Me.columnRate4XR = MyBase.Columns("Rate4XR")
            Me.columnCallRate2XR = MyBase.Columns("CallRate2XR")
            Me.columnTarget2XR = MyBase.Columns("Target2XR")
            Me.columnRate2XR = MyBase.Columns("Rate2XR")
            Me.columnCallReach = MyBase.Columns("CallReach")
            Me.columnTargetReach = MyBase.Columns("TargetReach")
            Me.columnRateReach = MyBase.Columns("RateReach")
            Me.columnCallReachR = MyBase.Columns("CallReachR")
            Me.columnTargetReachR = MyBase.Columns("TargetReachR")
            Me.columnRateReachR = MyBase.Columns("RateReachR")
            Me.columnRateR = MyBase.Columns("RateR")
            Me.columnAbove85PrevCom = MyBase.Columns("Above85PrevCom")
            Me.columnTeamName = MyBase.Columns("TeamName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRowid = New Global.System.Data.DataColumn("Rowid", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRowid)
            Me.columnOriginalSales = New Global.System.Data.DataColumn("OriginalSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalSales)
            Me.columnOriginalTarget = New Global.System.Data.DataColumn("OriginalTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalTarget)
            Me.columnAdjustedSales = New Global.System.Data.DataColumn("AdjustedSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjustedSales)
            Me.columnAdjustedTarget = New Global.System.Data.DataColumn("AdjustedTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjustedTarget)
            Me.columnDivision = New Global.System.Data.DataColumn("Division", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivision)
            Me.columnDivisionPerformance = New Global.System.Data.DataColumn("DivisionPerformance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisionPerformance)
            Me.columnDistrictPerformance = New Global.System.Data.DataColumn("DistrictPerformance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrictPerformance)
            Me.columnBasic = New Global.System.Data.DataColumn("Basic", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasic)
            Me.columnKeyProduct = New Global.System.Data.DataColumn("KeyProduct", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyProduct)
            Me.columnKeyProductSales = New Global.System.Data.DataColumn("KeyProductSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyProductSales)
            Me.columnKeyProductTarget = New Global.System.Data.DataColumn("KeyProductTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyProductTarget)
            Me.columnSubKeyProductSales = New Global.System.Data.DataColumn("SubKeyProductSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubKeyProductSales)
            Me.columnSubKeyProductTarget = New Global.System.Data.DataColumn("SubKeyProductTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubKeyProductTarget)
            Me.columnTertiaryKeyProductSales = New Global.System.Data.DataColumn("TertiaryKeyProductSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTertiaryKeyProductSales)
            Me.columnTertiaryKeyProductTarget = New Global.System.Data.DataColumn("TertiaryKeyProductTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTertiaryKeyProductTarget)
            Me.columnExcessSales = New Global.System.Data.DataColumn("ExcessSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessSales)
            Me.columnRepCount = New Global.System.Data.DataColumn("RepCount", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRepCount)
            Me.columnQuadStorm = New Global.System.Data.DataColumn("QuadStorm", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuadStorm)
            Me.columnCallRate = New Global.System.Data.DataColumn("CallRate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallRate)
            Me.columnTarget = New Global.System.Data.DataColumn("Target", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarget)
            Me.columnAdjustedCallRate = New Global.System.Data.DataColumn("AdjustedCallRate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjustedCallRate)
            Me.columnAdjustedCallTarget = New Global.System.Data.DataColumn("AdjustedCallTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjustedCallTarget)
            Me.columnSupCode = New Global.System.Data.DataColumn("SupCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupCode)
            Me.columnSupName = New Global.System.Data.DataColumn("SupName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupName)
            Me.columnMrCode = New Global.System.Data.DataColumn("MrCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMrCode)
            Me.columnMrName = New Global.System.Data.DataColumn("MrName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMrName)
            Me.columnCommissionDate = New Global.System.Data.DataColumn("CommissionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCommissionDate)
            Me.columnOriginalSalesR = New Global.System.Data.DataColumn("OriginalSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalSalesR)
            Me.columnOriginalTargetR = New Global.System.Data.DataColumn("OriginalTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalTargetR)
            Me.columnAdjustedSalesR = New Global.System.Data.DataColumn("AdjustedSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjustedSalesR)
            Me.columnAdjustedTargetR = New Global.System.Data.DataColumn("AdjustedTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjustedTargetR)
            Me.columnDivisionR = New Global.System.Data.DataColumn("DivisionR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisionR)
            Me.columnDivisionPerformanceR = New Global.System.Data.DataColumn("DivisionPerformanceR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisionPerformanceR)
            Me.columnDistrictPerformanceR = New Global.System.Data.DataColumn("DistrictPerformanceR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrictPerformanceR)
            Me.columnBasicR = New Global.System.Data.DataColumn("BasicR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBasicR)
            Me.columnKeyProductR = New Global.System.Data.DataColumn("KeyProductR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyProductR)
            Me.columnKeyProductSalesR = New Global.System.Data.DataColumn("KeyProductSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyProductSalesR)
            Me.columnKeyProductTargetR = New Global.System.Data.DataColumn("KeyProductTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyProductTargetR)
            Me.columnSubKeyProductSalesR = New Global.System.Data.DataColumn("SubKeyProductSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubKeyProductSalesR)
            Me.columnSubKeyProductTargetR = New Global.System.Data.DataColumn("SubKeyProductTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubKeyProductTargetR)
            Me.columnTertiaryKeyProductSalesR = New Global.System.Data.DataColumn("TertiaryKeyProductSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTertiaryKeyProductSalesR)
            Me.columnTertiaryKeyProductTargetR = New Global.System.Data.DataColumn("TertiaryKeyProductTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTertiaryKeyProductTargetR)
            Me.columnExcessSalesR = New Global.System.Data.DataColumn("ExcessSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExcessSalesR)
            Me.columnRepCountR = New Global.System.Data.DataColumn("RepCountR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRepCountR)
            Me.columnQuadStormR = New Global.System.Data.DataColumn("QuadStormR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuadStormR)
            Me.columnCallRateR = New Global.System.Data.DataColumn("CallRateR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallRateR)
            Me.columnTargetR = New Global.System.Data.DataColumn("TargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetR)
            Me.columnDivisionSalesR = New Global.System.Data.DataColumn("DivisionSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisionSalesR)
            Me.columnDivisionTargetR = New Global.System.Data.DataColumn("DivisionTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisionTargetR)
            Me.columnDistrictSalesR = New Global.System.Data.DataColumn("DistrictSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrictSalesR)
            Me.columnDistrictTargetR = New Global.System.Data.DataColumn("DistrictTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrictTargetR)
            Me.columnDivisionSales = New Global.System.Data.DataColumn("DivisionSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisionSales)
            Me.columnDivisionTarget = New Global.System.Data.DataColumn("DivisionTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivisionTarget)
            Me.columnDistrictSales = New Global.System.Data.DataColumn("DistrictSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrictSales)
            Me.columnDistrictTarget = New Global.System.Data.DataColumn("DistrictTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrictTarget)
            Me.columnAbove85 = New Global.System.Data.DataColumn("Above85", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbove85)
            Me.columnAbove85Current = New Global.System.Data.DataColumn("Above85Current", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbove85Current)
            Me.columnAbove85Previous = New Global.System.Data.DataColumn("Above85Previous", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbove85Previous)
            Me.columnTrueDivision = New Global.System.Data.DataColumn("TrueDivision", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrueDivision)
            Me.columnLateTag = New Global.System.Data.DataColumn("LateTag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLateTag)
            Me.columnDSMNotIncluded = New Global.System.Data.DataColumn("DSMNotIncluded", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDSMNotIncluded)
            Me.columnLateTagR = New Global.System.Data.DataColumn("LateTagR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLateTagR)
            Me.columnDSMNotIncludedR = New Global.System.Data.DataColumn("DSMNotIncludedR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDSMNotIncludedR)
            Me.columnCombinedSales = New Global.System.Data.DataColumn("CombinedSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCombinedSales)
            Me.columnCombinedTarget = New Global.System.Data.DataColumn("CombinedTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCombinedTarget)
            Me.columnCombinedSalesR = New Global.System.Data.DataColumn("CombinedSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCombinedSalesR)
            Me.columnCombinedTargetR = New Global.System.Data.DataColumn("CombinedTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCombinedTargetR)
            Me.columnCallRateProduct = New Global.System.Data.DataColumn("CallRateProduct", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallRateProduct)
            Me.columnCallRateProductTarget = New Global.System.Data.DataColumn("CallRateProductTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallRateProductTarget)
            Me.columnCallRateProductR = New Global.System.Data.DataColumn("CallRateProductR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallRateProductR)
            Me.columnCallRateProductTargetR = New Global.System.Data.DataColumn("CallRateProductTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallRateProductTargetR)
            Me.columnProduct1 = New Global.System.Data.DataColumn("Product1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct1)
            Me.columnProduct2 = New Global.System.Data.DataColumn("Product2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct2)
            Me.columnProduct3 = New Global.System.Data.DataColumn("Product3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct3)
            Me.columnProductCall1 = New Global.System.Data.DataColumn("ProductCall1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductCall1)
            Me.columnProductCall2 = New Global.System.Data.DataColumn("ProductCall2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductCall2)
            Me.columnProductCall3 = New Global.System.Data.DataColumn("ProductCall3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductCall3)
            Me.columnProductTarget1 = New Global.System.Data.DataColumn("ProductTarget1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductTarget1)
            Me.columnProductTarget2 = New Global.System.Data.DataColumn("ProductTarget2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductTarget2)
            Me.columnProductTarget3 = New Global.System.Data.DataColumn("ProductTarget3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductTarget3)
            Me.columnProduct1R = New Global.System.Data.DataColumn("Product1R", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct1R)
            Me.columnProduct2R = New Global.System.Data.DataColumn("Product2R", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct2R)
            Me.columnProduct3R = New Global.System.Data.DataColumn("Product3R", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct3R)
            Me.columnProductCall1R = New Global.System.Data.DataColumn("ProductCall1R", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductCall1R)
            Me.columnProductCall2R = New Global.System.Data.DataColumn("ProductCall2R", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductCall2R)
            Me.columnProductCall3R = New Global.System.Data.DataColumn("ProductCall3R", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductCall3R)
            Me.columnProductTarget1R = New Global.System.Data.DataColumn("ProductTarget1R", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductTarget1R)
            Me.columnProductTarget2R = New Global.System.Data.DataColumn("ProductTarget2R", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductTarget2R)
            Me.columnProductTarget3R = New Global.System.Data.DataColumn("ProductTarget3R", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductTarget3R)
            Me.columnTeamDivision = New Global.System.Data.DataColumn("TeamDivision", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeamDivision)
            Me.columnTeamDivisionR = New Global.System.Data.DataColumn("TeamDivisionR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeamDivisionR)
            Me.columnProduct1IncRate = New Global.System.Data.DataColumn("Product1IncRate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct1IncRate)
            Me.columnProduct2IncRate = New Global.System.Data.DataColumn("Product2IncRate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct2IncRate)
            Me.columnProduct3IncRate = New Global.System.Data.DataColumn("Product3IncRate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct3IncRate)
            Me.columnProduct1IncRateR = New Global.System.Data.DataColumn("Product1IncRateR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct1IncRateR)
            Me.columnProduct2IncRateR = New Global.System.Data.DataColumn("Product2IncRateR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct2IncRateR)
            Me.columnProduct3IncRateR = New Global.System.Data.DataColumn("Product3IncRateR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct3IncRateR)
            Me.columnProduct1Sales = New Global.System.Data.DataColumn("Product1Sales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct1Sales)
            Me.columnProduct2Sales = New Global.System.Data.DataColumn("Product2Sales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct2Sales)
            Me.columnProduct3Sales = New Global.System.Data.DataColumn("Product3Sales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct3Sales)
            Me.columnProduct1Budget = New Global.System.Data.DataColumn("Product1Budget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct1Budget)
            Me.columnProduct2Budget = New Global.System.Data.DataColumn("Product2Budget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct2Budget)
            Me.columnProduct3Budget = New Global.System.Data.DataColumn("Product3Budget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct3Budget)
            Me.columnProduct1SalesR = New Global.System.Data.DataColumn("Product1SalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct1SalesR)
            Me.columnProduct2SalesR = New Global.System.Data.DataColumn("Product2SalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct2SalesR)
            Me.columnProduct3SalesR = New Global.System.Data.DataColumn("Product3SalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct3SalesR)
            Me.columnProduct1BudgetR = New Global.System.Data.DataColumn("Product1BudgetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct1BudgetR)
            Me.columnProduct2BudgetR = New Global.System.Data.DataColumn("Product2BudgetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct2BudgetR)
            Me.columnProduct3BudgetR = New Global.System.Data.DataColumn("Product3BudgetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct3BudgetR)
            Me.columnPushProductSales = New Global.System.Data.DataColumn("PushProductSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPushProductSales)
            Me.columnPushProductTarget = New Global.System.Data.DataColumn("PushProductTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPushProductTarget)
            Me.columnPushProductSalesR = New Global.System.Data.DataColumn("PushProductSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPushProductSalesR)
            Me.columnPushProductTargetR = New Global.System.Data.DataColumn("PushProductTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPushProductTargetR)
            Me.columnQuadKeyProductSales = New Global.System.Data.DataColumn("QuadKeyProductSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuadKeyProductSales)
            Me.columnQuadKeyProductTarget = New Global.System.Data.DataColumn("QuadKeyProductTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuadKeyProductTarget)
            Me.columnQuintKeyProductSales = New Global.System.Data.DataColumn("QuintKeyProductSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuintKeyProductSales)
            Me.columnQuintKeyProductTarget = New Global.System.Data.DataColumn("QuintKeyProductTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuintKeyProductTarget)
            Me.columnQuadKeyProductSalesR = New Global.System.Data.DataColumn("QuadKeyProductSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuadKeyProductSalesR)
            Me.columnQuadKeyProductTargetR = New Global.System.Data.DataColumn("QuadKeyProductTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuadKeyProductTargetR)
            Me.columnQuintKeyProductSalesR = New Global.System.Data.DataColumn("QuintKeyProductSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuintKeyProductSalesR)
            Me.columnQuintKeyProductTargetR = New Global.System.Data.DataColumn("QuintKeyProductTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQuintKeyProductTargetR)
            Me.columnPushProductsDesc = New Global.System.Data.DataColumn("PushProductsDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPushProductsDesc)
            Me.columnKPflg = New Global.System.Data.DataColumn("KPflg", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKPflg)
            Me.columnpprod1 = New Global.System.Data.DataColumn("pprod1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpprod1)
            Me.columnpprod2 = New Global.System.Data.DataColumn("pprod2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpprod2)
            Me.columnpprod3 = New Global.System.Data.DataColumn("pprod3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpprod3)
            Me.columnpprod4 = New Global.System.Data.DataColumn("pprod4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpprod4)
            Me.columnpprod5 = New Global.System.Data.DataColumn("pprod5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpprod5)
            Me.columnProduct4 = New Global.System.Data.DataColumn("Product4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct4)
            Me.columnProductCall4 = New Global.System.Data.DataColumn("ProductCall4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductCall4)
            Me.columnProductTarget4 = New Global.System.Data.DataColumn("ProductTarget4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductTarget4)
            Me.columnProduct4IncRate = New Global.System.Data.DataColumn("Product4IncRate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct4IncRate)
            Me.columnProduct4Sales = New Global.System.Data.DataColumn("Product4Sales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct4Sales)
            Me.columnProduct4Budget = New Global.System.Data.DataColumn("Product4Budget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct4Budget)
            Me.columnProduct4R = New Global.System.Data.DataColumn("Product4R", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct4R)
            Me.columnProductCall4R = New Global.System.Data.DataColumn("ProductCall4R", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductCall4R)
            Me.columnProductTarget4R = New Global.System.Data.DataColumn("ProductTarget4R", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProductTarget4R)
            Me.columnProduct4IncRateR = New Global.System.Data.DataColumn("Product4IncRateR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct4IncRateR)
            Me.columnProduct4SalesR = New Global.System.Data.DataColumn("Product4SalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct4SalesR)
            Me.columnProduct4BudgetR = New Global.System.Data.DataColumn("Product4BudgetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct4BudgetR)
            Me.columnQueDoxQty = New Global.System.Data.DataColumn("QueDoxQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQueDoxQty)
            Me.columnDrSalesAmount = New Global.System.Data.DataColumn("DrSalesAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrSalesAmount)
            Me.columnDrTargetAmount = New Global.System.Data.DataColumn("DrTargetAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrTargetAmount)
            Me.columnDrSalesAmountR = New Global.System.Data.DataColumn("DrSalesAmountR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrSalesAmountR)
            Me.columnDrTargetAmountR = New Global.System.Data.DataColumn("DrTargetAmountR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrTargetAmountR)
            Me.columnTevanateQty = New Global.System.Data.DataColumn("TevanateQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTevanateQty)
            Me.columnOrigSalesPros = New Global.System.Data.DataColumn("OrigSalesPros", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrigSalesPros)
            Me.columnOrigTargetPros = New Global.System.Data.DataColumn("OrigTargetPros", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrigTargetPros)
            Me.columnOrigSalesProsR = New Global.System.Data.DataColumn("OrigSalesProsR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrigSalesProsR)
            Me.columnOrigTargetProsR = New Global.System.Data.DataColumn("OrigTargetProsR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrigTargetProsR)
            Me.columnDSMLateTag = New Global.System.Data.DataColumn("DSMLateTag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDSMLateTag)
            Me.columnDSMLateTagR = New Global.System.Data.DataColumn("DSMLateTagR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDSMLateTagR)
            Me.columnpprod6 = New Global.System.Data.DataColumn("pprod6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpprod6)
            Me.columnSeptKeyProductSales = New Global.System.Data.DataColumn("SeptKeyProductSales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeptKeyProductSales)
            Me.columnSeptKeyProductTarget = New Global.System.Data.DataColumn("SeptKeyProductTarget", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeptKeyProductTarget)
            Me.columnSeptKeyProductSalesR = New Global.System.Data.DataColumn("SeptKeyProductSalesR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeptKeyProductSalesR)
            Me.columnSeptKeyProductTargetR = New Global.System.Data.DataColumn("SeptKeyProductTargetR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeptKeyProductTargetR)
            Me.columnRate = New Global.System.Data.DataColumn("Rate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRate)
            Me.columnCallRate4x = New Global.System.Data.DataColumn("CallRate4x", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallRate4x)
            Me.columnTarget4x = New Global.System.Data.DataColumn("Target4x", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarget4x)
            Me.columnRate4x = New Global.System.Data.DataColumn("Rate4x", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRate4x)
            Me.columnCallRate2x = New Global.System.Data.DataColumn("CallRate2x", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallRate2x)
            Me.columnTarget2x = New Global.System.Data.DataColumn("Target2x", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarget2x)
            Me.columnRate2x = New Global.System.Data.DataColumn("Rate2x", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRate2x)
            Me.columnAreaCode = New Global.System.Data.DataColumn("AreaCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaCode)
            Me.columnAreaName = New Global.System.Data.DataColumn("AreaName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaName)
            Me.columnAreaCodeR = New Global.System.Data.DataColumn("AreaCodeR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaCodeR)
            Me.columnAreaNameR = New Global.System.Data.DataColumn("AreaNameR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAreaNameR)
            Me.columnDistrictCode = New Global.System.Data.DataColumn("DistrictCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrictCode)
            Me.columnDistrictName = New Global.System.Data.DataColumn("DistrictName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrictName)
            Me.columnDistrictCodeR = New Global.System.Data.DataColumn("DistrictCodeR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrictCodeR)
            Me.columnDistrictNameR = New Global.System.Data.DataColumn("DistrictNameR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDistrictNameR)
            Me.columnCallReach2X = New Global.System.Data.DataColumn("CallReach2X", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallReach2X)
            Me.columnTargetReach2X = New Global.System.Data.DataColumn("TargetReach2X", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetReach2X)
            Me.columnRateReach2X = New Global.System.Data.DataColumn("RateReach2X", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRateReach2X)
            Me.columnCallReach4X = New Global.System.Data.DataColumn("CallReach4X", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallReach4X)
            Me.columnTargetReach4X = New Global.System.Data.DataColumn("TargetReach4X", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetReach4X)
            Me.columnRateReach4X = New Global.System.Data.DataColumn("RateReach4X", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRateReach4X)
            Me.columnCallReach2XR = New Global.System.Data.DataColumn("CallReach2XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallReach2XR)
            Me.columnTargetReach2XR = New Global.System.Data.DataColumn("TargetReach2XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetReach2XR)
            Me.columnRateReach2XR = New Global.System.Data.DataColumn("RateReach2XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRateReach2XR)
            Me.columnCallReach4XR = New Global.System.Data.DataColumn("CallReach4XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallReach4XR)
            Me.columnTargetReach4XR = New Global.System.Data.DataColumn("TargetReach4XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetReach4XR)
            Me.columnRateReach4XR = New Global.System.Data.DataColumn("RateReach4XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRateReach4XR)
            Me.columnCallRate4XR = New Global.System.Data.DataColumn("CallRate4XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallRate4XR)
            Me.columnTarget4XR = New Global.System.Data.DataColumn("Target4XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarget4XR)
            Me.columnRate4XR = New Global.System.Data.DataColumn("Rate4XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRate4XR)
            Me.columnCallRate2XR = New Global.System.Data.DataColumn("CallRate2XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallRate2XR)
            Me.columnTarget2XR = New Global.System.Data.DataColumn("Target2XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarget2XR)
            Me.columnRate2XR = New Global.System.Data.DataColumn("Rate2XR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRate2XR)
            Me.columnCallReach = New Global.System.Data.DataColumn("CallReach", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallReach)
            Me.columnTargetReach = New Global.System.Data.DataColumn("TargetReach", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetReach)
            Me.columnRateReach = New Global.System.Data.DataColumn("RateReach", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRateReach)
            Me.columnCallReachR = New Global.System.Data.DataColumn("CallReachR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCallReachR)
            Me.columnTargetReachR = New Global.System.Data.DataColumn("TargetReachR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTargetReachR)
            Me.columnRateReachR = New Global.System.Data.DataColumn("RateReachR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRateReachR)
            Me.columnRateR = New Global.System.Data.DataColumn("RateR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRateR)
            Me.columnAbove85PrevCom = New Global.System.Data.DataColumn("Above85PrevCom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbove85PrevCom)
            Me.columnTeamName = New Global.System.Data.DataColumn("TeamName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeamName)
            Me.columnRowid.AutoIncrement = true
            Me.columnRowid.AllowDBNull = false
            Me.columnRowid.ReadOnly = true
            Me.columnTargetReach2X.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewComIncRecoverRow() As ComIncRecoverRow
            Return CType(Me.NewRow,ComIncRecoverRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ComIncRecoverRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ComIncRecoverRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ComIncRecoverRowChangedEvent) Is Nothing) Then
                RaiseEvent ComIncRecoverRowChanged(Me, New ComIncRecoverRowChangeEvent(CType(e.Row,ComIncRecoverRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ComIncRecoverRowChangingEvent) Is Nothing) Then
                RaiseEvent ComIncRecoverRowChanging(Me, New ComIncRecoverRowChangeEvent(CType(e.Row,ComIncRecoverRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ComIncRecoverRowDeletedEvent) Is Nothing) Then
                RaiseEvent ComIncRecoverRowDeleted(Me, New ComIncRecoverRowChangeEvent(CType(e.Row,ComIncRecoverRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ComIncRecoverRowDeletingEvent) Is Nothing) Then
                RaiseEvent ComIncRecoverRowDeleting(Me, New ComIncRecoverRowChangeEvent(CType(e.Row,ComIncRecoverRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveComIncRecoverRow(ByVal row As ComIncRecoverRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ComincRecover2009 = New ComincRecover2009()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ComIncRecoverDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MedrepCommission_Details2009Row
        Inherits Global.System.Data.DataRow
        
        Private tableMedrepCommission_Details2009 As MedrepCommission_Details2009DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMedrepCommission_Details2009 = CType(Me.Table,MedrepCommission_Details2009DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CommissionDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMedrepCommission_Details2009.CommissionDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CommissionDate' in table 'MedrepCommission_Details2009' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMedrepCommission_Details2009.CommissionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MrCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableMedrepCommission_Details2009.MrCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MrCode' in table 'MedrepCommission_Details2009' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMedrepCommission_Details2009.MrCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMedrepCommission_Details2009.SalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sales' in table 'MedrepCommission_Details2009' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMedrepCommission_Details2009.SalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Target() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMedrepCommission_Details2009.TargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Target' in table 'MedrepCommission_Details2009' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMedrepCommission_Details2009.TargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCommissionDateNull() As Boolean
            Return Me.IsNull(Me.tableMedrepCommission_Details2009.CommissionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCommissionDateNull()
            Me(Me.tableMedrepCommission_Details2009.CommissionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMrCodeNull() As Boolean
            Return Me.IsNull(Me.tableMedrepCommission_Details2009.MrCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMrCodeNull()
            Me(Me.tableMedrepCommission_Details2009.MrCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSalesNull() As Boolean
            Return Me.IsNull(Me.tableMedrepCommission_Details2009.SalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSalesNull()
            Me(Me.tableMedrepCommission_Details2009.SalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTargetNull() As Boolean
            Return Me.IsNull(Me.tableMedrepCommission_Details2009.TargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTargetNull()
            Me(Me.tableMedrepCommission_Details2009.TargetColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ChiralPMR_2009SaleTargetRow
        Inherits Global.System.Data.DataRow
        
        Private tableChiralPMR_2009SaleTarget As ChiralPMR_2009SaleTargetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableChiralPMR_2009SaleTarget = CType(Me.Table,ChiralPMR_2009SaleTargetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rowid() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.RowidColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rowid' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.RowidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CommissionDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.CommissionDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CommissionDate' in table 'ChiralPMR_2009SaleTarget' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.CommissionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SupCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.SupCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupCode' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.SupCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MrCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.MrCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MrCode' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.MrCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JanJulS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.JanJulSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JanJulS' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.JanJulSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FebAugS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.FebAugSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FebAugS' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.FebAugSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MarSepS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.MarSepSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MarSepS' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.MarSepSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AprOctS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.AprOctSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AprOctS' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.AprOctSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MayNovS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.MayNovSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MayNovS' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.MayNovSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JunDecS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.JunDecSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JunDecS' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.JunDecSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JanJulT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.JanJulTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JanJulT' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.JanJulTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FebAugT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.FebAugTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FebAugT' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.FebAugTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MarSepT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.MarSepTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MarSepT' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.MarSepTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AprOctT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.AprOctTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AprOctT' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.AprOctTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MayNovT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.MayNovTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MayNovT' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.MayNovTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JunDecT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableChiralPMR_2009SaleTarget.JunDecTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JunDecT' in table 'ChiralPMR_2009SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableChiralPMR_2009SaleTarget.JunDecTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRowidNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.RowidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRowidNull()
            Me(Me.tableChiralPMR_2009SaleTarget.RowidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCommissionDateNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.CommissionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCommissionDateNull()
            Me(Me.tableChiralPMR_2009SaleTarget.CommissionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupCodeNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.SupCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupCodeNull()
            Me(Me.tableChiralPMR_2009SaleTarget.SupCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMrCodeNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.MrCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMrCodeNull()
            Me(Me.tableChiralPMR_2009SaleTarget.MrCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJanJulSNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.JanJulSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJanJulSNull()
            Me(Me.tableChiralPMR_2009SaleTarget.JanJulSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFebAugSNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.FebAugSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFebAugSNull()
            Me(Me.tableChiralPMR_2009SaleTarget.FebAugSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMarSepSNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.MarSepSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMarSepSNull()
            Me(Me.tableChiralPMR_2009SaleTarget.MarSepSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAprOctSNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.AprOctSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAprOctSNull()
            Me(Me.tableChiralPMR_2009SaleTarget.AprOctSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMayNovSNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.MayNovSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMayNovSNull()
            Me(Me.tableChiralPMR_2009SaleTarget.MayNovSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJunDecSNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.JunDecSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJunDecSNull()
            Me(Me.tableChiralPMR_2009SaleTarget.JunDecSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJanJulTNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.JanJulTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJanJulTNull()
            Me(Me.tableChiralPMR_2009SaleTarget.JanJulTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFebAugTNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.FebAugTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFebAugTNull()
            Me(Me.tableChiralPMR_2009SaleTarget.FebAugTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMarSepTNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.MarSepTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMarSepTNull()
            Me(Me.tableChiralPMR_2009SaleTarget.MarSepTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAprOctTNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.AprOctTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAprOctTNull()
            Me(Me.tableChiralPMR_2009SaleTarget.AprOctTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMayNovTNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.MayNovTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMayNovTNull()
            Me(Me.tableChiralPMR_2009SaleTarget.MayNovTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJunDecTNull() As Boolean
            Return Me.IsNull(Me.tableChiralPMR_2009SaleTarget.JunDecTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJunDecTNull()
            Me(Me.tableChiralPMR_2009SaleTarget.JunDecTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MHpmr_2010SaleTargetRow
        Inherits Global.System.Data.DataRow
        
        Private tableMHpmr_2010SaleTarget As MHpmr_2010SaleTargetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMHpmr_2010SaleTarget = CType(Me.Table,MHpmr_2010SaleTargetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rowid() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.RowidColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rowid' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.RowidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CommissionDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.CommissionDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CommissionDate' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.CommissionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SupCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.SupCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupCode' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.SupCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MrCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.MrCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MrCode' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.MrCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JanJulS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.JanJulSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JanJulS' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.JanJulSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FebAugS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.FebAugSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FebAugS' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.FebAugSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MarSepS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.MarSepSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MarSepS' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.MarSepSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AprOctS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.AprOctSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AprOctS' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.AprOctSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MayNovS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.MayNovSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MayNovS' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.MayNovSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JunDecS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.JunDecSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JunDecS' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.JunDecSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JanJulT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.JanJulTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JanJulT' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.JanJulTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FebAugT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.FebAugTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FebAugT' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.FebAugTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MarSepT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.MarSepTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MarSepT' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.MarSepTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AprOctT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.AprOctTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AprOctT' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.AprOctTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MayNovT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.MayNovTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MayNovT' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.MayNovTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JunDecT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMHpmr_2010SaleTarget.JunDecTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JunDecT' in table 'MHpmr_2010SaleTarget' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMHpmr_2010SaleTarget.JunDecTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRowidNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.RowidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRowidNull()
            Me(Me.tableMHpmr_2010SaleTarget.RowidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCommissionDateNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.CommissionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCommissionDateNull()
            Me(Me.tableMHpmr_2010SaleTarget.CommissionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupCodeNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.SupCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupCodeNull()
            Me(Me.tableMHpmr_2010SaleTarget.SupCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMrCodeNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.MrCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMrCodeNull()
            Me(Me.tableMHpmr_2010SaleTarget.MrCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJanJulSNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.JanJulSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJanJulSNull()
            Me(Me.tableMHpmr_2010SaleTarget.JanJulSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFebAugSNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.FebAugSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFebAugSNull()
            Me(Me.tableMHpmr_2010SaleTarget.FebAugSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMarSepSNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.MarSepSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMarSepSNull()
            Me(Me.tableMHpmr_2010SaleTarget.MarSepSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAprOctSNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.AprOctSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAprOctSNull()
            Me(Me.tableMHpmr_2010SaleTarget.AprOctSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMayNovSNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.MayNovSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMayNovSNull()
            Me(Me.tableMHpmr_2010SaleTarget.MayNovSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJunDecSNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.JunDecSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJunDecSNull()
            Me(Me.tableMHpmr_2010SaleTarget.JunDecSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJanJulTNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.JanJulTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJanJulTNull()
            Me(Me.tableMHpmr_2010SaleTarget.JanJulTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFebAugTNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.FebAugTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFebAugTNull()
            Me(Me.tableMHpmr_2010SaleTarget.FebAugTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMarSepTNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.MarSepTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMarSepTNull()
            Me(Me.tableMHpmr_2010SaleTarget.MarSepTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAprOctTNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.AprOctTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAprOctTNull()
            Me(Me.tableMHpmr_2010SaleTarget.AprOctTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMayNovTNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.MayNovTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMayNovTNull()
            Me(Me.tableMHpmr_2010SaleTarget.MayNovTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJunDecTNull() As Boolean
            Return Me.IsNull(Me.tableMHpmr_2010SaleTarget.JunDecTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJunDecTNull()
            Me(Me.tableMHpmr_2010SaleTarget.JunDecTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ComIncRecoverRow
        Inherits Global.System.Data.DataRow
        
        Private tableComIncRecover As ComIncRecoverDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableComIncRecover = CType(Me.Table,ComIncRecoverDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rowid() As Decimal
            Get
                Return CType(Me(Me.tableComIncRecover.RowidColumn),Decimal)
            End Get
            Set
                Me(Me.tableComIncRecover.RowidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OriginalSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.OriginalSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.OriginalSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OriginalTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.OriginalTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.OriginalTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AdjustedSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.AdjustedSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AdjustedSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.AdjustedSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AdjustedTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.AdjustedTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AdjustedTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.AdjustedTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Division() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DivisionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Division' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DivisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DivisionPerformance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DivisionPerformanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DivisionPerformance' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DivisionPerformanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistrictPerformance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DistrictPerformanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistrictPerformance' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DistrictPerformanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Basic() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.BasicColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Basic' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.BasicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyProduct() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.KeyProductColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyProduct' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.KeyProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyProductSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.KeyProductSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyProductSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.KeyProductSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyProductTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.KeyProductTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyProductTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.KeyProductTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubKeyProductSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.SubKeyProductSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubKeyProductSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.SubKeyProductSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubKeyProductTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.SubKeyProductTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubKeyProductTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.SubKeyProductTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TertiaryKeyProductSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TertiaryKeyProductSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TertiaryKeyProductSales' in table 'ComIncRecover' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TertiaryKeyProductSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TertiaryKeyProductTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TertiaryKeyProductTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TertiaryKeyProductTarget' in table 'ComIncRecover' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TertiaryKeyProductTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExcessSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ExcessSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ExcessSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RepCount() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.RepCountColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RepCount' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.RepCountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuadStorm() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QuadStormColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuadStorm' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QuadStormColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallRate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallRateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallRate' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Target() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Target' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AdjustedCallRate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.AdjustedCallRateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AdjustedCallRate' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.AdjustedCallRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AdjustedCallTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.AdjustedCallTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AdjustedCallTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.AdjustedCallTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SupCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.SupCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupCode' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.SupCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SupName() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.SupNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupName' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.SupNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MrCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.MrCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MrCode' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.MrCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MrName() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.MrNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MrName' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.MrNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CommissionDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CommissionDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CommissionDate' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CommissionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OriginalSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.OriginalSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.OriginalSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OriginalTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.OriginalTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalTargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.OriginalTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AdjustedSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.AdjustedSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AdjustedSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.AdjustedSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AdjustedTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.AdjustedTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AdjustedTargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.AdjustedTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DivisionR() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DivisionRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DivisionR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DivisionRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DivisionPerformanceR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DivisionPerformanceRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DivisionPerformanceR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DivisionPerformanceRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistrictPerformanceR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DistrictPerformanceRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistrictPerformanceR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DistrictPerformanceRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BasicR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.BasicRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BasicR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.BasicRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyProductR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.KeyProductRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyProductR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.KeyProductRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyProductSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.KeyProductSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyProductSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.KeyProductSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyProductTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.KeyProductTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyProductTargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.KeyProductTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubKeyProductSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.SubKeyProductSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubKeyProductSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.SubKeyProductSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubKeyProductTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.SubKeyProductTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubKeyProductTargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.SubKeyProductTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TertiaryKeyProductSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TertiaryKeyProductSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TertiaryKeyProductSalesR' in table 'ComIncRecover' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TertiaryKeyProductSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TertiaryKeyProductTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TertiaryKeyProductTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TertiaryKeyProductTargetR' in table 'ComIncRecover' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TertiaryKeyProductTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExcessSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ExcessSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExcessSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ExcessSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RepCountR() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.RepCountRColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RepCountR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.RepCountRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuadStormR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QuadStormRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuadStormR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QuadStormRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallRateR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallRateRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallRateR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallRateRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DivisionSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DivisionSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DivisionSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DivisionSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DivisionTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DivisionTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DivisionTargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DivisionTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistrictSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DistrictSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistrictSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DistrictSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistrictTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DistrictTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistrictTargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DistrictTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DivisionSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DivisionSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DivisionSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DivisionSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DivisionTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DivisionTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DivisionTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DivisionTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistrictSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DistrictSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistrictSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DistrictSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistrictTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DistrictTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistrictTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DistrictTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Above85() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Above85Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Above85' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Above85Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Above85Current() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Above85CurrentColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Above85Current' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Above85CurrentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Above85Previous() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Above85PreviousColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Above85Previous' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Above85PreviousColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TrueDivision() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TrueDivisionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrueDivision' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TrueDivisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LateTag() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.LateTagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LateTag' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.LateTagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DSMNotIncluded() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DSMNotIncludedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DSMNotIncluded' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DSMNotIncludedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LateTagR() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.LateTagRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LateTagR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.LateTagRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DSMNotIncludedR() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DSMNotIncludedRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DSMNotIncludedR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DSMNotIncludedRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CombinedSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CombinedSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CombinedSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CombinedSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CombinedTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CombinedTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CombinedTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CombinedTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CombinedSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CombinedSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CombinedSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CombinedSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CombinedTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CombinedTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CombinedTargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CombinedTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallRateProduct() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallRateProductColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallRateProduct' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallRateProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallRateProductTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallRateProductTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallRateProductTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallRateProductTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallRateProductR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallRateProductRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallRateProductR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallRateProductRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallRateProductTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallRateProductTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallRateProductTargetR' in table 'ComIncRecover' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallRateProductTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product1() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product1' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product2() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product2' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product3() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product3' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductCall1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductCall1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductCall1' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductCall1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductCall2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductCall2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductCall2' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductCall2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductCall3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductCall3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductCall3' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductCall3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductTarget1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductTarget1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductTarget1' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductTarget1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductTarget2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductTarget2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductTarget2' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductTarget2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductTarget3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductTarget3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductTarget3' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductTarget3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product1R() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product1RColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product1R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product1RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product2R() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product2RColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product2R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product2RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product3R() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product3RColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product3R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product3RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductCall1R() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductCall1RColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductCall1R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductCall1RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductCall2R() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductCall2RColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductCall2R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductCall2RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductCall3R() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductCall3RColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductCall3R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductCall3RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductTarget1R() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductTarget1RColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductTarget1R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductTarget1RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductTarget2R() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductTarget2RColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductTarget2R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductTarget2RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductTarget3R() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductTarget3RColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductTarget3R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductTarget3RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TeamDivision() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TeamDivisionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TeamDivision' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TeamDivisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TeamDivisionR() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TeamDivisionRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TeamDivisionR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TeamDivisionRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product1IncRate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product1IncRateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product1IncRate' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product1IncRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product2IncRate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product2IncRateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product2IncRate' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product2IncRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product3IncRate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product3IncRateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product3IncRate' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product3IncRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product1IncRateR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product1IncRateRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product1IncRateR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product1IncRateRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product2IncRateR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product2IncRateRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product2IncRateR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product2IncRateRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product3IncRateR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product3IncRateRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product3IncRateR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product3IncRateRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product1Sales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product1SalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product1Sales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product1SalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product2Sales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product2SalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product2Sales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product2SalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product3Sales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product3SalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product3Sales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product3SalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product1Budget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product1BudgetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product1Budget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product1BudgetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product2Budget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product2BudgetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product2Budget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product2BudgetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product3Budget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product3BudgetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product3Budget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product3BudgetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product1SalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product1SalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product1SalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product1SalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product2SalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product2SalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product2SalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product2SalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product3SalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product3SalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product3SalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product3SalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product1BudgetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product1BudgetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product1BudgetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product1BudgetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product2BudgetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product2BudgetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product2BudgetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product2BudgetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product3BudgetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product3BudgetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product3BudgetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product3BudgetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PushProductSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.PushProductSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PushProductSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.PushProductSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PushProductTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.PushProductTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PushProductTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.PushProductTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PushProductSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.PushProductSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PushProductSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.PushProductSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PushProductTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.PushProductTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PushProductTargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.PushProductTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuadKeyProductSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QuadKeyProductSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuadKeyProductSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QuadKeyProductSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuadKeyProductTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QuadKeyProductTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuadKeyProductTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QuadKeyProductTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuintKeyProductSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QuintKeyProductSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuintKeyProductSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QuintKeyProductSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuintKeyProductTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QuintKeyProductTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuintKeyProductTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QuintKeyProductTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuadKeyProductSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QuadKeyProductSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuadKeyProductSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QuadKeyProductSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuadKeyProductTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QuadKeyProductTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuadKeyProductTargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QuadKeyProductTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuintKeyProductSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QuintKeyProductSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuintKeyProductSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QuintKeyProductSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QuintKeyProductTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QuintKeyProductTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QuintKeyProductTargetR' in table 'ComIncRecover' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QuintKeyProductTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PushProductsDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.PushProductsDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PushProductsDesc' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.PushProductsDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KPflg() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.KPflgColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KPflg' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.KPflgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pprod1() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.pprod1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pprod1' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.pprod1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pprod2() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.pprod2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pprod2' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.pprod2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pprod3() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.pprod3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pprod3' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.pprod3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pprod4() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.pprod4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pprod4' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.pprod4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pprod5() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.pprod5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pprod5' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.pprod5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product4() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product4' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductCall4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductCall4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductCall4' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductCall4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductTarget4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductTarget4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductTarget4' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductTarget4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product4IncRate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product4IncRateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product4IncRate' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product4IncRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product4Sales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product4SalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product4Sales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product4SalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product4Budget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product4BudgetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product4Budget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product4BudgetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product4R() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product4RColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product4R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product4RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductCall4R() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductCall4RColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductCall4R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductCall4RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProductTarget4R() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.ProductTarget4RColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProductTarget4R' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.ProductTarget4RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product4IncRateR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product4IncRateRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product4IncRateR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product4IncRateRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product4SalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product4SalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product4SalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product4SalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product4BudgetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Product4BudgetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product4BudgetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Product4BudgetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QueDoxQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.QueDoxQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QueDoxQty' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.QueDoxQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DrSalesAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DrSalesAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DrSalesAmount' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DrSalesAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DrTargetAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DrTargetAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DrTargetAmount' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DrTargetAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DrSalesAmountR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DrSalesAmountRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DrSalesAmountR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DrSalesAmountRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DrTargetAmountR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DrTargetAmountRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DrTargetAmountR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DrTargetAmountRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TevanateQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TevanateQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TevanateQty' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TevanateQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrigSalesPros() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.OrigSalesProsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrigSalesPros' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.OrigSalesProsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrigTargetPros() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.OrigTargetProsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrigTargetPros' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.OrigTargetProsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrigSalesProsR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.OrigSalesProsRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrigSalesProsR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.OrigSalesProsRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrigTargetProsR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.OrigTargetProsRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrigTargetProsR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.OrigTargetProsRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DSMLateTag() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DSMLateTagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DSMLateTag' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DSMLateTagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DSMLateTagR() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DSMLateTagRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DSMLateTagR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DSMLateTagRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pprod6() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.pprod6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pprod6' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.pprod6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SeptKeyProductSales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.SeptKeyProductSalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeptKeyProductSales' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.SeptKeyProductSalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SeptKeyProductTarget() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.SeptKeyProductTargetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeptKeyProductTarget' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.SeptKeyProductTargetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SeptKeyProductSalesR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.SeptKeyProductSalesRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeptKeyProductSalesR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.SeptKeyProductSalesRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SeptKeyProductTargetR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.SeptKeyProductTargetRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SeptKeyProductTargetR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.SeptKeyProductTargetRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.RateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rate' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.RateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallRate4x() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallRate4xColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallRate4x' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallRate4xColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Target4x() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Target4xColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Target4x' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Target4xColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rate4x() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Rate4xColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rate4x' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Rate4xColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallRate2x() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallRate2xColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallRate2x' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallRate2xColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Target2x() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Target2xColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Target2x' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Target2xColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rate2x() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Rate2xColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rate2x' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Rate2xColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.AreaCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaCode' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.AreaCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaName() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.AreaNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaName' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.AreaNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaCodeR() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.AreaCodeRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaCodeR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.AreaCodeRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AreaNameR() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.AreaNameRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AreaNameR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.AreaNameRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistrictCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DistrictCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistrictCode' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DistrictCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistrictName() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DistrictNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistrictName' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DistrictNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistrictCodeR() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DistrictCodeRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistrictCodeR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DistrictCodeRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DistrictNameR() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.DistrictNameRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DistrictNameR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.DistrictNameRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallReach2X() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallReach2XColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallReach2X' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallReach2XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TargetReach2X() As Decimal
            Get
                Return CType(Me(Me.tableComIncRecover.TargetReach2XColumn),Decimal)
            End Get
            Set
                Me(Me.tableComIncRecover.TargetReach2XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RateReach2X() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.RateReach2XColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RateReach2X' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.RateReach2XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallReach4X() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallReach4XColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallReach4X' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallReach4XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TargetReach4X() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TargetReach4XColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TargetReach4X' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TargetReach4XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RateReach4X() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.RateReach4XColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RateReach4X' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.RateReach4XColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallReach2XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallReach2XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallReach2XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallReach2XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TargetReach2XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TargetReach2XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TargetReach2XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TargetReach2XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RateReach2XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.RateReach2XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RateReach2XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.RateReach2XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallReach4XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallReach4XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallReach4XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallReach4XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TargetReach4XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TargetReach4XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TargetReach4XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TargetReach4XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RateReach4XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.RateReach4XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RateReach4XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.RateReach4XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallRate4XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallRate4XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallRate4XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallRate4XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Target4XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Target4XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Target4XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Target4XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rate4XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Rate4XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rate4XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Rate4XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallRate2XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallRate2XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallRate2XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallRate2XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Target2XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Target2XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Target2XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Target2XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rate2XR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Rate2XRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rate2XR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Rate2XRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallReach() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallReachColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallReach' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallReachColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TargetReach() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TargetReachColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TargetReach' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TargetReachColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RateReach() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.RateReachColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RateReach' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.RateReachColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CallReachR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.CallReachRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CallReachR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.CallReachRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TargetReachR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TargetReachRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TargetReachR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TargetReachRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RateReachR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.RateReachRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RateReachR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.RateReachRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RateR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.RateRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RateR' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.RateRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Above85PrevCom() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.Above85PrevComColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Above85PrevCom' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.Above85PrevComColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TeamName() As String
            Get
                Try 
                    Return CType(Me(Me.tableComIncRecover.TeamNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TeamName' in table 'ComIncRecover' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComIncRecover.TeamNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOriginalSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.OriginalSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOriginalSalesNull()
            Me(Me.tableComIncRecover.OriginalSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOriginalTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.OriginalTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOriginalTargetNull()
            Me(Me.tableComIncRecover.OriginalTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdjustedSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.AdjustedSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdjustedSalesNull()
            Me(Me.tableComIncRecover.AdjustedSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdjustedTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.AdjustedTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdjustedTargetNull()
            Me(Me.tableComIncRecover.AdjustedTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisionNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DivisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisionNull()
            Me(Me.tableComIncRecover.DivisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisionPerformanceNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DivisionPerformanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisionPerformanceNull()
            Me(Me.tableComIncRecover.DivisionPerformanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistrictPerformanceNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DistrictPerformanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistrictPerformanceNull()
            Me(Me.tableComIncRecover.DistrictPerformanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBasicNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.BasicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBasicNull()
            Me(Me.tableComIncRecover.BasicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyProductNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.KeyProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyProductNull()
            Me(Me.tableComIncRecover.KeyProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyProductSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.KeyProductSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyProductSalesNull()
            Me(Me.tableComIncRecover.KeyProductSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyProductTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.KeyProductTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyProductTargetNull()
            Me(Me.tableComIncRecover.KeyProductTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubKeyProductSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.SubKeyProductSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubKeyProductSalesNull()
            Me(Me.tableComIncRecover.SubKeyProductSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubKeyProductTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.SubKeyProductTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubKeyProductTargetNull()
            Me(Me.tableComIncRecover.SubKeyProductTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTertiaryKeyProductSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TertiaryKeyProductSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTertiaryKeyProductSalesNull()
            Me(Me.tableComIncRecover.TertiaryKeyProductSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTertiaryKeyProductTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TertiaryKeyProductTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTertiaryKeyProductTargetNull()
            Me(Me.tableComIncRecover.TertiaryKeyProductTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExcessSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ExcessSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExcessSalesNull()
            Me(Me.tableComIncRecover.ExcessSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRepCountNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.RepCountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRepCountNull()
            Me(Me.tableComIncRecover.RepCountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuadStormNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QuadStormColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuadStormNull()
            Me(Me.tableComIncRecover.QuadStormColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallRateNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallRateNull()
            Me(Me.tableComIncRecover.CallRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTargetNull()
            Me(Me.tableComIncRecover.TargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdjustedCallRateNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.AdjustedCallRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdjustedCallRateNull()
            Me(Me.tableComIncRecover.AdjustedCallRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdjustedCallTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.AdjustedCallTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdjustedCallTargetNull()
            Me(Me.tableComIncRecover.AdjustedCallTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupCodeNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.SupCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupCodeNull()
            Me(Me.tableComIncRecover.SupCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupNameNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.SupNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupNameNull()
            Me(Me.tableComIncRecover.SupNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMrCodeNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.MrCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMrCodeNull()
            Me(Me.tableComIncRecover.MrCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMrNameNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.MrNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMrNameNull()
            Me(Me.tableComIncRecover.MrNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCommissionDateNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CommissionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCommissionDateNull()
            Me(Me.tableComIncRecover.CommissionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOriginalSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.OriginalSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOriginalSalesRNull()
            Me(Me.tableComIncRecover.OriginalSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOriginalTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.OriginalTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOriginalTargetRNull()
            Me(Me.tableComIncRecover.OriginalTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdjustedSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.AdjustedSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdjustedSalesRNull()
            Me(Me.tableComIncRecover.AdjustedSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdjustedTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.AdjustedTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdjustedTargetRNull()
            Me(Me.tableComIncRecover.AdjustedTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisionRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DivisionRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisionRNull()
            Me(Me.tableComIncRecover.DivisionRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisionPerformanceRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DivisionPerformanceRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisionPerformanceRNull()
            Me(Me.tableComIncRecover.DivisionPerformanceRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistrictPerformanceRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DistrictPerformanceRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistrictPerformanceRNull()
            Me(Me.tableComIncRecover.DistrictPerformanceRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBasicRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.BasicRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBasicRNull()
            Me(Me.tableComIncRecover.BasicRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyProductRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.KeyProductRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyProductRNull()
            Me(Me.tableComIncRecover.KeyProductRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyProductSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.KeyProductSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyProductSalesRNull()
            Me(Me.tableComIncRecover.KeyProductSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyProductTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.KeyProductTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyProductTargetRNull()
            Me(Me.tableComIncRecover.KeyProductTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubKeyProductSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.SubKeyProductSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubKeyProductSalesRNull()
            Me(Me.tableComIncRecover.SubKeyProductSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubKeyProductTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.SubKeyProductTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubKeyProductTargetRNull()
            Me(Me.tableComIncRecover.SubKeyProductTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTertiaryKeyProductSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TertiaryKeyProductSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTertiaryKeyProductSalesRNull()
            Me(Me.tableComIncRecover.TertiaryKeyProductSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTertiaryKeyProductTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TertiaryKeyProductTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTertiaryKeyProductTargetRNull()
            Me(Me.tableComIncRecover.TertiaryKeyProductTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExcessSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ExcessSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExcessSalesRNull()
            Me(Me.tableComIncRecover.ExcessSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRepCountRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.RepCountRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRepCountRNull()
            Me(Me.tableComIncRecover.RepCountRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuadStormRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QuadStormRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuadStormRNull()
            Me(Me.tableComIncRecover.QuadStormRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallRateRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallRateRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallRateRNull()
            Me(Me.tableComIncRecover.CallRateRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTargetRNull()
            Me(Me.tableComIncRecover.TargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisionSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DivisionSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisionSalesRNull()
            Me(Me.tableComIncRecover.DivisionSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisionTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DivisionTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisionTargetRNull()
            Me(Me.tableComIncRecover.DivisionTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistrictSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DistrictSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistrictSalesRNull()
            Me(Me.tableComIncRecover.DistrictSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistrictTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DistrictTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistrictTargetRNull()
            Me(Me.tableComIncRecover.DistrictTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisionSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DivisionSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisionSalesNull()
            Me(Me.tableComIncRecover.DivisionSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivisionTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DivisionTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivisionTargetNull()
            Me(Me.tableComIncRecover.DivisionTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistrictSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DistrictSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistrictSalesNull()
            Me(Me.tableComIncRecover.DistrictSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistrictTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DistrictTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistrictTargetNull()
            Me(Me.tableComIncRecover.DistrictTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbove85Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Above85Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbove85Null()
            Me(Me.tableComIncRecover.Above85Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbove85CurrentNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Above85CurrentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbove85CurrentNull()
            Me(Me.tableComIncRecover.Above85CurrentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbove85PreviousNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Above85PreviousColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbove85PreviousNull()
            Me(Me.tableComIncRecover.Above85PreviousColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTrueDivisionNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TrueDivisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTrueDivisionNull()
            Me(Me.tableComIncRecover.TrueDivisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLateTagNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.LateTagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLateTagNull()
            Me(Me.tableComIncRecover.LateTagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDSMNotIncludedNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DSMNotIncludedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDSMNotIncludedNull()
            Me(Me.tableComIncRecover.DSMNotIncludedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLateTagRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.LateTagRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLateTagRNull()
            Me(Me.tableComIncRecover.LateTagRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDSMNotIncludedRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DSMNotIncludedRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDSMNotIncludedRNull()
            Me(Me.tableComIncRecover.DSMNotIncludedRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCombinedSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CombinedSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCombinedSalesNull()
            Me(Me.tableComIncRecover.CombinedSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCombinedTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CombinedTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCombinedTargetNull()
            Me(Me.tableComIncRecover.CombinedTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCombinedSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CombinedSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCombinedSalesRNull()
            Me(Me.tableComIncRecover.CombinedSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCombinedTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CombinedTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCombinedTargetRNull()
            Me(Me.tableComIncRecover.CombinedTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallRateProductNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallRateProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallRateProductNull()
            Me(Me.tableComIncRecover.CallRateProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallRateProductTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallRateProductTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallRateProductTargetNull()
            Me(Me.tableComIncRecover.CallRateProductTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallRateProductRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallRateProductRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallRateProductRNull()
            Me(Me.tableComIncRecover.CallRateProductRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallRateProductTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallRateProductTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallRateProductTargetRNull()
            Me(Me.tableComIncRecover.CallRateProductTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct1Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct1Null()
            Me(Me.tableComIncRecover.Product1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct2Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct2Null()
            Me(Me.tableComIncRecover.Product2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct3Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct3Null()
            Me(Me.tableComIncRecover.Product3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductCall1Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductCall1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductCall1Null()
            Me(Me.tableComIncRecover.ProductCall1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductCall2Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductCall2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductCall2Null()
            Me(Me.tableComIncRecover.ProductCall2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductCall3Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductCall3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductCall3Null()
            Me(Me.tableComIncRecover.ProductCall3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductTarget1Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductTarget1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductTarget1Null()
            Me(Me.tableComIncRecover.ProductTarget1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductTarget2Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductTarget2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductTarget2Null()
            Me(Me.tableComIncRecover.ProductTarget2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductTarget3Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductTarget3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductTarget3Null()
            Me(Me.tableComIncRecover.ProductTarget3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct1RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product1RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct1RNull()
            Me(Me.tableComIncRecover.Product1RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct2RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product2RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct2RNull()
            Me(Me.tableComIncRecover.Product2RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct3RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product3RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct3RNull()
            Me(Me.tableComIncRecover.Product3RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductCall1RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductCall1RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductCall1RNull()
            Me(Me.tableComIncRecover.ProductCall1RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductCall2RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductCall2RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductCall2RNull()
            Me(Me.tableComIncRecover.ProductCall2RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductCall3RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductCall3RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductCall3RNull()
            Me(Me.tableComIncRecover.ProductCall3RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductTarget1RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductTarget1RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductTarget1RNull()
            Me(Me.tableComIncRecover.ProductTarget1RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductTarget2RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductTarget2RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductTarget2RNull()
            Me(Me.tableComIncRecover.ProductTarget2RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductTarget3RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductTarget3RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductTarget3RNull()
            Me(Me.tableComIncRecover.ProductTarget3RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTeamDivisionNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TeamDivisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTeamDivisionNull()
            Me(Me.tableComIncRecover.TeamDivisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTeamDivisionRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TeamDivisionRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTeamDivisionRNull()
            Me(Me.tableComIncRecover.TeamDivisionRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct1IncRateNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product1IncRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct1IncRateNull()
            Me(Me.tableComIncRecover.Product1IncRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct2IncRateNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product2IncRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct2IncRateNull()
            Me(Me.tableComIncRecover.Product2IncRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct3IncRateNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product3IncRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct3IncRateNull()
            Me(Me.tableComIncRecover.Product3IncRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct1IncRateRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product1IncRateRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct1IncRateRNull()
            Me(Me.tableComIncRecover.Product1IncRateRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct2IncRateRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product2IncRateRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct2IncRateRNull()
            Me(Me.tableComIncRecover.Product2IncRateRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct3IncRateRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product3IncRateRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct3IncRateRNull()
            Me(Me.tableComIncRecover.Product3IncRateRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct1SalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product1SalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct1SalesNull()
            Me(Me.tableComIncRecover.Product1SalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct2SalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product2SalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct2SalesNull()
            Me(Me.tableComIncRecover.Product2SalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct3SalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product3SalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct3SalesNull()
            Me(Me.tableComIncRecover.Product3SalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct1BudgetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product1BudgetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct1BudgetNull()
            Me(Me.tableComIncRecover.Product1BudgetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct2BudgetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product2BudgetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct2BudgetNull()
            Me(Me.tableComIncRecover.Product2BudgetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct3BudgetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product3BudgetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct3BudgetNull()
            Me(Me.tableComIncRecover.Product3BudgetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct1SalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product1SalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct1SalesRNull()
            Me(Me.tableComIncRecover.Product1SalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct2SalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product2SalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct2SalesRNull()
            Me(Me.tableComIncRecover.Product2SalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct3SalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product3SalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct3SalesRNull()
            Me(Me.tableComIncRecover.Product3SalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct1BudgetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product1BudgetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct1BudgetRNull()
            Me(Me.tableComIncRecover.Product1BudgetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct2BudgetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product2BudgetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct2BudgetRNull()
            Me(Me.tableComIncRecover.Product2BudgetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct3BudgetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product3BudgetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct3BudgetRNull()
            Me(Me.tableComIncRecover.Product3BudgetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPushProductSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.PushProductSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPushProductSalesNull()
            Me(Me.tableComIncRecover.PushProductSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPushProductTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.PushProductTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPushProductTargetNull()
            Me(Me.tableComIncRecover.PushProductTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPushProductSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.PushProductSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPushProductSalesRNull()
            Me(Me.tableComIncRecover.PushProductSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPushProductTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.PushProductTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPushProductTargetRNull()
            Me(Me.tableComIncRecover.PushProductTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuadKeyProductSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QuadKeyProductSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuadKeyProductSalesNull()
            Me(Me.tableComIncRecover.QuadKeyProductSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuadKeyProductTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QuadKeyProductTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuadKeyProductTargetNull()
            Me(Me.tableComIncRecover.QuadKeyProductTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuintKeyProductSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QuintKeyProductSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuintKeyProductSalesNull()
            Me(Me.tableComIncRecover.QuintKeyProductSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuintKeyProductTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QuintKeyProductTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuintKeyProductTargetNull()
            Me(Me.tableComIncRecover.QuintKeyProductTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuadKeyProductSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QuadKeyProductSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuadKeyProductSalesRNull()
            Me(Me.tableComIncRecover.QuadKeyProductSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuadKeyProductTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QuadKeyProductTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuadKeyProductTargetRNull()
            Me(Me.tableComIncRecover.QuadKeyProductTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuintKeyProductSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QuintKeyProductSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuintKeyProductSalesRNull()
            Me(Me.tableComIncRecover.QuintKeyProductSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQuintKeyProductTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QuintKeyProductTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQuintKeyProductTargetRNull()
            Me(Me.tableComIncRecover.QuintKeyProductTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPushProductsDescNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.PushProductsDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPushProductsDescNull()
            Me(Me.tableComIncRecover.PushProductsDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKPflgNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.KPflgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKPflgNull()
            Me(Me.tableComIncRecover.KPflgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispprod1Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.pprod1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpprod1Null()
            Me(Me.tableComIncRecover.pprod1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispprod2Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.pprod2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpprod2Null()
            Me(Me.tableComIncRecover.pprod2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispprod3Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.pprod3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpprod3Null()
            Me(Me.tableComIncRecover.pprod3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispprod4Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.pprod4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpprod4Null()
            Me(Me.tableComIncRecover.pprod4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispprod5Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.pprod5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpprod5Null()
            Me(Me.tableComIncRecover.pprod5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct4Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct4Null()
            Me(Me.tableComIncRecover.Product4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductCall4Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductCall4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductCall4Null()
            Me(Me.tableComIncRecover.ProductCall4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductTarget4Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductTarget4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductTarget4Null()
            Me(Me.tableComIncRecover.ProductTarget4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct4IncRateNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product4IncRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct4IncRateNull()
            Me(Me.tableComIncRecover.Product4IncRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct4SalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product4SalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct4SalesNull()
            Me(Me.tableComIncRecover.Product4SalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct4BudgetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product4BudgetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct4BudgetNull()
            Me(Me.tableComIncRecover.Product4BudgetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct4RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product4RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct4RNull()
            Me(Me.tableComIncRecover.Product4RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductCall4RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductCall4RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductCall4RNull()
            Me(Me.tableComIncRecover.ProductCall4RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductTarget4RNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.ProductTarget4RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductTarget4RNull()
            Me(Me.tableComIncRecover.ProductTarget4RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct4IncRateRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product4IncRateRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct4IncRateRNull()
            Me(Me.tableComIncRecover.Product4IncRateRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct4SalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product4SalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct4SalesRNull()
            Me(Me.tableComIncRecover.Product4SalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct4BudgetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Product4BudgetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct4BudgetRNull()
            Me(Me.tableComIncRecover.Product4BudgetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQueDoxQtyNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.QueDoxQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQueDoxQtyNull()
            Me(Me.tableComIncRecover.QueDoxQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDrSalesAmountNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DrSalesAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDrSalesAmountNull()
            Me(Me.tableComIncRecover.DrSalesAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDrTargetAmountNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DrTargetAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDrTargetAmountNull()
            Me(Me.tableComIncRecover.DrTargetAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDrSalesAmountRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DrSalesAmountRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDrSalesAmountRNull()
            Me(Me.tableComIncRecover.DrSalesAmountRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDrTargetAmountRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DrTargetAmountRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDrTargetAmountRNull()
            Me(Me.tableComIncRecover.DrTargetAmountRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTevanateQtyNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TevanateQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTevanateQtyNull()
            Me(Me.tableComIncRecover.TevanateQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrigSalesProsNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.OrigSalesProsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrigSalesProsNull()
            Me(Me.tableComIncRecover.OrigSalesProsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrigTargetProsNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.OrigTargetProsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrigTargetProsNull()
            Me(Me.tableComIncRecover.OrigTargetProsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrigSalesProsRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.OrigSalesProsRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrigSalesProsRNull()
            Me(Me.tableComIncRecover.OrigSalesProsRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrigTargetProsRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.OrigTargetProsRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrigTargetProsRNull()
            Me(Me.tableComIncRecover.OrigTargetProsRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDSMLateTagNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DSMLateTagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDSMLateTagNull()
            Me(Me.tableComIncRecover.DSMLateTagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDSMLateTagRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DSMLateTagRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDSMLateTagRNull()
            Me(Me.tableComIncRecover.DSMLateTagRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ispprod6Null() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.pprod6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setpprod6Null()
            Me(Me.tableComIncRecover.pprod6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSeptKeyProductSalesNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.SeptKeyProductSalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSeptKeyProductSalesNull()
            Me(Me.tableComIncRecover.SeptKeyProductSalesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSeptKeyProductTargetNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.SeptKeyProductTargetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSeptKeyProductTargetNull()
            Me(Me.tableComIncRecover.SeptKeyProductTargetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSeptKeyProductSalesRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.SeptKeyProductSalesRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSeptKeyProductSalesRNull()
            Me(Me.tableComIncRecover.SeptKeyProductSalesRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSeptKeyProductTargetRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.SeptKeyProductTargetRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSeptKeyProductTargetRNull()
            Me(Me.tableComIncRecover.SeptKeyProductTargetRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRateNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.RateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRateNull()
            Me(Me.tableComIncRecover.RateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallRate4xNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallRate4xColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallRate4xNull()
            Me(Me.tableComIncRecover.CallRate4xColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTarget4xNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Target4xColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTarget4xNull()
            Me(Me.tableComIncRecover.Target4xColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRate4xNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Rate4xColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRate4xNull()
            Me(Me.tableComIncRecover.Rate4xColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallRate2xNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallRate2xColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallRate2xNull()
            Me(Me.tableComIncRecover.CallRate2xColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTarget2xNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Target2xColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTarget2xNull()
            Me(Me.tableComIncRecover.Target2xColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRate2xNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Rate2xColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRate2xNull()
            Me(Me.tableComIncRecover.Rate2xColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaCodeNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.AreaCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaCodeNull()
            Me(Me.tableComIncRecover.AreaCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaNameNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.AreaNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaNameNull()
            Me(Me.tableComIncRecover.AreaNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaCodeRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.AreaCodeRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaCodeRNull()
            Me(Me.tableComIncRecover.AreaCodeRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaNameRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.AreaNameRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaNameRNull()
            Me(Me.tableComIncRecover.AreaNameRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistrictCodeNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DistrictCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistrictCodeNull()
            Me(Me.tableComIncRecover.DistrictCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistrictNameNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DistrictNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistrictNameNull()
            Me(Me.tableComIncRecover.DistrictNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistrictCodeRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DistrictCodeRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistrictCodeRNull()
            Me(Me.tableComIncRecover.DistrictCodeRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDistrictNameRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.DistrictNameRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDistrictNameRNull()
            Me(Me.tableComIncRecover.DistrictNameRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallReach2XNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallReach2XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallReach2XNull()
            Me(Me.tableComIncRecover.CallReach2XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRateReach2XNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.RateReach2XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRateReach2XNull()
            Me(Me.tableComIncRecover.RateReach2XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallReach4XNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallReach4XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallReach4XNull()
            Me(Me.tableComIncRecover.CallReach4XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTargetReach4XNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TargetReach4XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTargetReach4XNull()
            Me(Me.tableComIncRecover.TargetReach4XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRateReach4XNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.RateReach4XColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRateReach4XNull()
            Me(Me.tableComIncRecover.RateReach4XColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallReach2XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallReach2XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallReach2XRNull()
            Me(Me.tableComIncRecover.CallReach2XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTargetReach2XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TargetReach2XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTargetReach2XRNull()
            Me(Me.tableComIncRecover.TargetReach2XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRateReach2XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.RateReach2XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRateReach2XRNull()
            Me(Me.tableComIncRecover.RateReach2XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallReach4XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallReach4XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallReach4XRNull()
            Me(Me.tableComIncRecover.CallReach4XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTargetReach4XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TargetReach4XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTargetReach4XRNull()
            Me(Me.tableComIncRecover.TargetReach4XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRateReach4XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.RateReach4XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRateReach4XRNull()
            Me(Me.tableComIncRecover.RateReach4XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallRate4XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallRate4XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallRate4XRNull()
            Me(Me.tableComIncRecover.CallRate4XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTarget4XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Target4XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTarget4XRNull()
            Me(Me.tableComIncRecover.Target4XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRate4XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Rate4XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRate4XRNull()
            Me(Me.tableComIncRecover.Rate4XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallRate2XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallRate2XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallRate2XRNull()
            Me(Me.tableComIncRecover.CallRate2XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTarget2XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Target2XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTarget2XRNull()
            Me(Me.tableComIncRecover.Target2XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRate2XRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Rate2XRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRate2XRNull()
            Me(Me.tableComIncRecover.Rate2XRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallReachNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallReachColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallReachNull()
            Me(Me.tableComIncRecover.CallReachColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTargetReachNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TargetReachColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTargetReachNull()
            Me(Me.tableComIncRecover.TargetReachColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRateReachNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.RateReachColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRateReachNull()
            Me(Me.tableComIncRecover.RateReachColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCallReachRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.CallReachRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCallReachRNull()
            Me(Me.tableComIncRecover.CallReachRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTargetReachRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TargetReachRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTargetReachRNull()
            Me(Me.tableComIncRecover.TargetReachRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRateReachRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.RateReachRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRateReachRNull()
            Me(Me.tableComIncRecover.RateReachRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRateRNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.RateRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRateRNull()
            Me(Me.tableComIncRecover.RateRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbove85PrevComNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.Above85PrevComColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbove85PrevComNull()
            Me(Me.tableComIncRecover.Above85PrevComColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTeamNameNull() As Boolean
            Return Me.IsNull(Me.tableComIncRecover.TeamNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTeamNameNull()
            Me(Me.tableComIncRecover.TeamNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MedrepCommission_Details2009RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MedrepCommission_Details2009Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MedrepCommission_Details2009Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MedrepCommission_Details2009Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ChiralPMR_2009SaleTargetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ChiralPMR_2009SaleTargetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ChiralPMR_2009SaleTargetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ChiralPMR_2009SaleTargetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MHpmr_2010SaleTargetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MHpmr_2010SaleTargetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MHpmr_2010SaleTargetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MHpmr_2010SaleTargetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ComIncRecoverRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ComIncRecoverRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ComIncRecoverRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ComIncRecoverRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
